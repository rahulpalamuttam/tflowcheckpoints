node {
  name: "global/Placeholder"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/conv2d/kernel/Initializer/random_uniform/max"
  input: "global/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "global/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "global/conv2d/kernel/Initializer/random_uniform/mul"
  input: "global/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/kernel"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d/kernel/Assign"
  op: "Assign"
  input: "global/conv2d/kernel"
  input: "global/conv2d/kernel/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/kernel/read"
  op: "Identity"
  input: "global/conv2d/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d/bias"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d/bias/Assign"
  op: "Assign"
  input: "global/conv2d/bias"
  input: "global/conv2d/bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/bias/read"
  op: "Identity"
  input: "global/conv2d/bias"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d/convolution"
  op: "Conv2D"
  input: "global/Placeholder"
  input: "global/conv2d/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "global/conv2d/convolution"
  input: "global/conv2d/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/conv2d/Elu"
  op: "Elu"
  input: "global/conv2d/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/max"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "global/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Assign"
  op: "Assign"
  input: "global/conv2d_1/kernel"
  input: "global/conv2d_1/kernel/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_1/kernel/read"
  op: "Identity"
  input: "global/conv2d_1/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_1/bias"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_1/bias/Assign"
  op: "Assign"
  input: "global/conv2d_1/bias"
  input: "global/conv2d_1/bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_1/bias/read"
  op: "Identity"
  input: "global/conv2d_1/bias"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_2/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_2/convolution"
  op: "Conv2D"
  input: "global/conv2d/Elu"
  input: "global/conv2d_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "global/conv2d_2/convolution"
  input: "global/conv2d_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/conv2d_2/Elu"
  op: "Elu"
  input: "global/conv2d_2/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/max"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/mul"
  input: "global/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Assign"
  op: "Assign"
  input: "global/conv2d_2/kernel"
  input: "global/conv2d_2/kernel/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/kernel/read"
  op: "Identity"
  input: "global/conv2d_2/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_2/bias"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_2/bias/Assign"
  op: "Assign"
  input: "global/conv2d_2/bias"
  input: "global/conv2d_2/bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/bias/read"
  op: "Identity"
  input: "global/conv2d_2/bias"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_3/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_3/convolution"
  op: "Conv2D"
  input: "global/conv2d_2/Elu"
  input: "global/conv2d_2/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "global/conv2d_3/convolution"
  input: "global/conv2d_2/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/conv2d_3/Elu"
  op: "Elu"
  input: "global/conv2d_3/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/max"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/mul"
  input: "global/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Assign"
  op: "Assign"
  input: "global/conv2d_3/kernel"
  input: "global/conv2d_3/kernel/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/kernel/read"
  op: "Identity"
  input: "global/conv2d_3/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_3/bias"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_3/bias/Assign"
  op: "Assign"
  input: "global/conv2d_3/bias"
  input: "global/conv2d_3/bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/bias/read"
  op: "Identity"
  input: "global/conv2d_3/bias"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_4/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_4/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/conv2d_4/convolution"
  op: "Conv2D"
  input: "global/conv2d_3/Elu"
  input: "global/conv2d_3/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "global/conv2d_4/convolution"
  input: "global/conv2d_3/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/conv2d_4/Elu"
  op: "Elu"
  input: "global/conv2d_4/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 2
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "global/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/transpose"
  op: "Transpose"
  input: "global/conv2d_4/Elu"
  input: "global/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "global/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377h\000\000\000"
      }
    }
  }
}
node {
  name: "global/Reshape"
  op: "Reshape"
  input: "global/transpose"
  input: "global/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "global/Softmax"
  op: "Softmax"
  input: "global/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "global/Reshape_1/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "global/Reshape_1"
  op: "Reshape"
  input: "global/Softmax"
  input: "global/Reshape_1/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "global/transpose_1/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/transpose_1"
  op: "Transpose"
  input: "global/Reshape_1"
  input: "global/transpose_1/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/ExpandDims"
  op: "ExpandDims"
  input: "global/transpose_1"
  input: "global/ExpandDims/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims_1/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/ExpandDims_1"
  op: "ExpandDims"
  input: "global/Const"
  input: "global/ExpandDims_1/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/mul"
  op: "Mul"
  input: "global/ExpandDims"
  input: "global/ExpandDims_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "global/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/Sum"
  op: "Sum"
  input: "global/mul"
  input: "global/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/Reshape_2/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000"
      }
    }
  }
}
node {
  name: "global/Reshape_2"
  op: "Reshape"
  input: "global/Sum"
  input: "global/Reshape_2/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "global/ExpandDims_2/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/ExpandDims_2"
  op: "ExpandDims"
  input: "global/Reshape_2"
  input: "global/ExpandDims_2/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "global/Shape"
  op: "Shape"
  input: "global/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/strided_slice"
  op: "StridedSlice"
  input: "global/Shape"
  input: "global/strided_slice/stack"
  input: "global/strided_slice/stack_1"
  input: "global/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Placeholder_1"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "global/Placeholder_2"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "global/transpose_2/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/transpose_2"
  op: "Transpose"
  input: "global/ExpandDims_2"
  input: "global/transpose_2/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "global/sequence_length"
  op: "Identity"
  input: "global/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/Shape"
  op: "Shape"
  input: "global/transpose_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/rnn/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice"
  op: "StridedSlice"
  input: "global/rnn/Shape"
  input: "global/rnn/strided_slice/stack"
  input: "global/rnn/strided_slice/stack_1"
  input: "global/rnn/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "global/rnn/Shape"
  input: "global/rnn/strided_slice_1/stack"
  input: "global/rnn/strided_slice_1/stack_1"
  input: "global/rnn/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/rnn/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/stack"
  op: "Pack"
  input: "global/rnn/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/rnn/Equal"
  op: "Equal"
  input: "global/rnn/Shape_1"
  input: "global/rnn/stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/All"
  op: "All"
  input: "global/rnn/Equal"
  input: "global/rnn/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/rnn/Assert/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/rnn/Assert/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor global/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "global/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "global/rnn/Assert/Assert"
  op: "Assert"
  input: "global/rnn/All"
  input: "global/rnn/Assert/Assert/data_0"
  input: "global/rnn/stack"
  input: "global/rnn/Assert/Assert/data_2"
  input: "global/rnn/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "global/rnn/CheckSeqLen"
  op: "Identity"
  input: "global/sequence_length"
  input: "^global/rnn/Assert/Assert"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/Shape_2"
  op: "Shape"
  input: "global/transpose_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "global/rnn/Shape_2"
  input: "global/rnn/strided_slice_2/stack"
  input: "global/rnn/strided_slice_2/stack_1"
  input: "global/rnn/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/rnn/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/strided_slice_3"
  op: "StridedSlice"
  input: "global/rnn/Shape_2"
  input: "global/rnn/strided_slice_3/stack"
  input: "global/rnn/strided_slice_3/stack_1"
  input: "global/rnn/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/rnn/stack_1/1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "global/rnn/stack_1"
  op: "Pack"
  input: "global/rnn/strided_slice_3"
  input: "global/rnn/stack_1/1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global/rnn/zeros/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/rnn/zeros"
  op: "Fill"
  input: "global/rnn/stack_1"
  input: "global/rnn/zeros/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/Min"
  op: "Min"
  input: "global/rnn/CheckSeqLen"
  input: "global/rnn/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/rnn/Const_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/Max"
  op: "Max"
  input: "global/rnn/CheckSeqLen"
  input: "global/rnn/Const_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global/rnn/time"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "global/rnn/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "global/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "global/rnn/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "global/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "global/transpose_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "global/rnn/TensorArrayUnstack/Shape"
  input: "global/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "global/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "global/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "global/rnn/TensorArrayUnstack/range/start"
  input: "global/rnn/TensorArrayUnstack/strided_slice"
  input: "global/rnn/TensorArrayUnstack/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "global/rnn/TensorArray_1"
  input: "global/rnn/TensorArrayUnstack/range"
  input: "global/transpose_2"
  input: "global/rnn/TensorArray_1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Enter"
  op: "Enter"
  input: "global/rnn/time"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/Enter_1"
  op: "Enter"
  input: "global/rnn/TensorArray:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/Enter_2"
  op: "Enter"
  input: "global/Placeholder_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/Enter_3"
  op: "Enter"
  input: "global/Placeholder_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/Merge"
  op: "Merge"
  input: "global/rnn/while/Enter"
  input: "global/rnn/while/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Merge_1"
  op: "Merge"
  input: "global/rnn/while/Enter_1"
  input: "global/rnn/while/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Merge_2"
  op: "Merge"
  input: "global/rnn/while/Enter_2"
  input: "global/rnn/while/NextIteration_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Merge_3"
  op: "Merge"
  input: "global/rnn/while/Enter_3"
  input: "global/rnn/while/NextIteration_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Less/Enter"
  op: "Enter"
  input: "global/rnn/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/Less"
  op: "Less"
  input: "global/rnn/while/Merge"
  input: "global/rnn/while/Less/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/LoopCond"
  op: "LoopCond"
  input: "global/rnn/while/Less"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Switch"
  op: "Switch"
  input: "global/rnn/while/Merge"
  input: "global/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Switch_1"
  op: "Switch"
  input: "global/rnn/while/Merge_1"
  input: "global/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Switch_2"
  op: "Switch"
  input: "global/rnn/while/Merge_2"
  input: "global/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Switch_3"
  op: "Switch"
  input: "global/rnn/while/Merge_3"
  input: "global/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Identity"
  op: "Identity"
  input: "global/rnn/while/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Identity_1"
  op: "Identity"
  input: "global/rnn/while/Switch_1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Identity_2"
  op: "Identity"
  input: "global/rnn/while/Switch_2:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Identity_3"
  op: "Identity"
  input: "global/rnn/while/Switch_3:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "global/rnn/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "global/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "global/rnn/while/TensorArrayReadV3/Enter"
  input: "global/rnn/while/Identity"
  input: "global/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06681530922651291
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/max"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform"
  op: "Add"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Assign"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/weights"
  input: "global/rnn/basic_lstm_cell/weights/Initializer/random_uniform"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "global/rnn/basic_lstm_cell/weights"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  input: "^global/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "global/rnn/while/TensorArrayReadV3"
  input: "global/rnn/while/Identity_3"
  input: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  op: "Enter"
  input: "global/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Assign"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/biases"
  input: "global/rnn/basic_lstm_cell/biases/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "global/rnn/basic_lstm_cell/biases"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  op: "Enter"
  input: "global/rnn/basic_lstm_cell/biases/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^global/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "global/rnn/while/basic_lstm_cell/split/split_dim"
  input: "global/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/add/y"
  op: "Const"
  input: "^global/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/add"
  op: "Add"
  input: "global/rnn/while/basic_lstm_cell/split:2"
  input: "global/rnn/while/basic_lstm_cell/add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "global/rnn/while/basic_lstm_cell/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/mul"
  op: "Mul"
  input: "global/rnn/while/Identity_2"
  input: "global/rnn/while/basic_lstm_cell/Sigmoid"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "global/rnn/while/basic_lstm_cell/split"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "global/rnn/while/basic_lstm_cell/split:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "global/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "global/rnn/while/basic_lstm_cell/Tanh"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/add_1"
  op: "Add"
  input: "global/rnn/while/basic_lstm_cell/mul"
  input: "global/rnn/while/basic_lstm_cell/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "global/rnn/while/basic_lstm_cell/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "global/rnn/while/basic_lstm_cell/split:3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "global/rnn/while/basic_lstm_cell/Tanh_1"
  input: "global/rnn/while/basic_lstm_cell/Sigmoid_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "global/rnn/CheckSeqLen"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "global/rnn/while/Identity"
  input: "global/rnn/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Select/Enter"
  op: "Enter"
  input: "global/rnn/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/Select"
  op: "Select"
  input: "global/rnn/while/GreaterEqual"
  input: "global/rnn/while/Select/Enter"
  input: "global/rnn/while/basic_lstm_cell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "global/rnn/while/Identity"
  input: "global/rnn/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Select_1"
  op: "Select"
  input: "global/rnn/while/GreaterEqual_1"
  input: "global/rnn/while/Identity_2"
  input: "global/rnn/while/basic_lstm_cell/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "global/rnn/while/Identity"
  input: "global/rnn/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Select_2"
  op: "Select"
  input: "global/rnn/while/GreaterEqual_2"
  input: "global/rnn/while/Identity_3"
  input: "global/rnn/while/basic_lstm_cell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "global/rnn/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "global/rnn/while/global/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "global/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "global/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "global/rnn/while/Identity"
  input: "global/rnn/while/Select"
  input: "global/rnn/while/Identity_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/add/y"
  op: "Const"
  input: "^global/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/while/add"
  op: "Add"
  input: "global/rnn/while/Identity"
  input: "global/rnn/while/add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/NextIteration"
  op: "NextIteration"
  input: "global/rnn/while/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "global/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "global/rnn/while/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "global/rnn/while/Select_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Exit"
  op: "Exit"
  input: "global/rnn/while/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Exit_1"
  op: "Exit"
  input: "global/rnn/while/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Exit_2"
  op: "Exit"
  input: "global/rnn/while/Switch_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/while/Exit_3"
  op: "Exit"
  input: "global/rnn/while/Switch_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "global/rnn/TensorArray"
  input: "global/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayStack/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayStack/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayStack/range"
  op: "Range"
  input: "global/rnn/TensorArrayStack/range/start"
  input: "global/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "global/rnn/TensorArrayStack/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "global/rnn/TensorArray"
  input: "global/rnn/TensorArrayStack/range"
  input: "global/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "global/rnn/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global/rnn/transpose"
  op: "Transpose"
  input: "global/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "global/rnn/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/Reshape_3/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "global/Reshape_3"
  op: "Reshape"
  input: "global/rnn/transpose"
  input: "global/Reshape_3/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/kernel/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
        tensor_content: "|\261N\272\002+\335\270L3j9\313i\021:\214\321\003: ?%\270\r\273\3019\203\003\351\271\010\315\3569\360\\X9u[\027:6]\020\272\246\022&:\200\2663\271\177\014F:3\276\001\272\237\304\33798\313\2468\'\351\234:\004\230|\271\263V\247:D\335;\271\316\327\014\272F9\341\270\276F\025\272!\344\013\271\304*a:\032\245W\272\333\200\373\271%\264\2369\023$\273\272A\002\337\271\201\342\2336\204\004\2329o\004\3437i]0\272\330\350\2718Q\n\335\271\261\231\004\271k\255\2478\356tB:\033-\213\272\206P\000\272g\273\201:@\001\017:*(c:\351j$9\252B\211\2720\000\317:\177\030L:Z=\010:\3520(\272\225\204\255\272\306fO\271\255\204Q\271Y\376=:\274\234\253:\256T#\272\351.I\271\014+\227\272B\364t9\250\243\3549f[/\272\364\234E\272\222\325\273\271\"\355#\272\036\351e:hn\024:g\250\3359N\327\336\271<*\266:^(\234:\265\006\226\270\332 \3569{\371F\272\321\203\247\272*Z\003\270\355B\004:\272`\205\271\211\277\n\2724Lb8\372\203\225\272\375 O\272^nE:\276}w:\022\263\305\270\021\247\320\271 \347\2148L4\211\272v\325\022\271\021\013\273\270\036@\2108\371\310\207\271\035\266\016\272\024\270\t\271sp\200\272\"+\3109\\\034\3277d\210\t9\320\316\0069\010\204]:\305$\017\272\354\320(\271N\214\"9;\347\3159\001u\340\271a\330\n\270Z\365\246\270\274\177H\271\303\235\0049B\267\320:\375\222\006:\336\346\275\270\223\335\367\271\354{\n:\211\304\261\272\0221\2749\215\3135:\025Q\2038$\322\321\271\303\243\232\272{\255\3039\361u\004\271\252\320\026\272\222\362\371\270]b\3069\360\220)\271R\265\325\271\300/R:8\350\213:0\242\007:W\236\2329\242:\006\272A\363\004:\005\354R\271\214\277\3175\017)\001:t\212\000\272\326\355H\271x!\2008\010\206\003\272V$+9$,\3169\226M?:\205\271t\271{\274,\271\'\362\2209\277\332\270:bL\233\272\2359\013:\234 \214\271\377\312\305\271&\351\335\270\203\224\20596\010\253\272\321\\\3768\213\t\2029\345\223\335\271\230\314\3609c\3465:\250F\0277\313U!\272+\321\316\270\321\216\3058\004\377\276:\264\265\2728\260\244\0329u\247<\272\177\177\2529\315?6:\0043\2178\0207U\271\305\264/:\032\366\0219;w\2528\317\257\0378x\317\211\272\367N\005:\233\26429\272\357b\270\207\347\3509\364*\0249bT\303\270\254\022I:\021\2573\267\232\337\336\272+\231\2029S:\2449u-\325\272m\370-\272V\202a\272LL\2329\232\335i9Rh\007\272\337\026J:\212n\025\272\023\376\2709\266\261/\272\022\365,\272\300T@\272\0179\356\271\037\030\225:\374.\2739cJ\3478\202>):\355\235/:\324\324\006\272N\226\3179C/-9\334)\303:&0\3738\201\266\200\271g`\2369\265\365\3667\013&\2508zN\2618\007\254\357\271/r\200\272]\316X9U4\r:(\316\332\2711\207\2619P\203\205\272\333\257\323\272\202@\235\272\016l$\272\325M\250\270^y\212:\355\243c\272\243\020&:\377w\261\271 \353|\270\235q\n\272/\301\223\272\005\211\2158A\014R:m\263O9\224\303\244\271\372\207\0049\205\033\225\271\253\326!:<\\\2109c,j6_\001%9f\r\316\270!\253W9&\017\201\272\221\354e8\274\334\2538/ \3639XI\177:\020#\332\271\014\305!\272;V\245\271\342\317K\270\322T\275\271x\345\3319\n\312\275\272\252\241F\271\321!\315\2716S;\272\263\262\276\271g\036::\016\350\2069\375\215\013:\023dv\272\251\266F\271\366\365\3018\351\226\020:\001\353A:X..:\013&\3069\371\242\247\271\276\003\r\272g\244\2518\370\260\243\272\230\321a:;o\225\271~j\004\270\177\246\344\272X/\2649\024\377\2408\370_:\272i\355x9+\0059\272\215\002\2379r\275\3149\316\210\335\271\230\361\027\272wC\240\271 \212!\272\347O,\272\214\367\2318-#\2639\275lI9\003\235e\272Y9>\2711\rU\271\215\007Q:`Y\357\267q\327\231\271R\261\331\271\252\021z9\342\236!:\037\312H\272\030\324\2028\211W49\270S\031:\01744:\257B\0259\373\263@\272Q\235\2018\333:9:E$\251:?\027<\272\".\2219Vh\035:Jv\024\271<\273U\272{\271;\272\323+ :O\251\033:\316\276\342\271\326KJ:\356\243\323\271=\246M\272\0223\3419*>\2148\030\252e\271\233\027\274\271\306\364\2039\227\320\313\271\035\274.\272\334Jj::\021\205\272\312\221<\272^\241\"\272\030\253z8\321\260\3239\024\204\217\271U\204\250\272*\024\3169\343\267\2639\222\034):\006\264\327\272\234\022\230\271)\203\263\271\310]\202\272\360\371\3118\233\220\3538dP29\025\264\346:\351\231\212\271Y[,\272lr\260\271,\325\2438\301;\2119\302\361\327\272\'>\227:\215\264\2628\315\226\3019\010\326\273\271\177TT:\000\366\324\271\367V\0319*k\013\272W\313R:Q\322\277\272\206q\2738F\\\200\272.\310\3009\220r\2239\273\205\251\272\3271c\271l\322\014\272V~\337\271\222\306\2509Y\322E\271\242\306\220:\212\205Q\272@0\t:\375\005\312:\354\310\3259\333\001l\272Aa\302\270\320\35329`\376\2359\245\3773:J3\0049\374\363\274:\345\364\000:\247\304\23696\025I\272naX\272<\304\0209a\354\202\272:\350\'\272v\265\3249\321\313\214:\3115\226\272\212F:9\n\356W\272\026\225\245\2713*,9xF\2758\316\240\277\271H\242L:d9e\271!\271\3379yY\217:\033\230X9\374\022c\272\222*\036\272n\017\035\271\0364\345\272\362\310\3179#*\0149\007p\2059UZ\016\272m>w\271\327\375w9\322\262\334\271\271\255\035:>\317\2409\364\225\2539a!4\272\250\3452\272\270F\212\271\003\213\270\270\030\334;\271\211\3360\271\363H\'8VK\212\271\365\206\263\270y}\3209\236\234\2619w\3775\272\257\367\205\271u\035\3118\360~\261\270Ar\033:f\320\242\272\326\237|\272\255\224a\271\023\024\365\272\252\316<\271\263\302\035\272\304\223\034:=7\241\272\236\260\2329\367\232\253\270*vT\272\211\244\3638\254\227\272:\321\367\237\271a\025@9\322\354\3509\353=39@\014\374\271\300\345\\\271\0031\"\272\254\342\312\270\355\355\3409\235\200[\272\274\223\\\2702{89\034\3139\272\233\320\303\270Y\316z\271\026\013\r:\274!>\272\001(\3678\030\377\2439\232^\353\271\323%\207\271&\0261\271q8\3469+z\3629\213\260\2618\263\320q:A\321\212\271hQ\n\272\245qK\272\326#B9\016\221\3628c\326\0148\271\345\223:T\030-9\306.\313\271\364\372U9\363\002\263:\265\273\2538s`\325\270\271A\2649\004\324\026:\272\250\002\271\350fF\272\227\255A8\375%;:[\0135\271\234\231\350\271y\"\003\272\336j\2079\305G\370\271}\036\252\271#5\0169\204)%9G]\202\270\000\355\2409\372\rQ\271\220$\247\2676\2437\270\271_\r9\306`\032\272\\)\037\271\003\357W:\371\221\000:\237\255\2748\331\265#\272Y\272\010\272\243%<:o\021\2269\"\007~9|\220\313\2712\342\263\270\257\302\3349\323?-:\277C\210:\026\351\020\272\364\200r\272\201\241\2449#o#:>\\\3229\334Bp8\322\033\000\272Y\014C\272VNG\272\033I\235\270g\025e\272r\250\0269\212\340\":\225\350K:\373\321\037:j`Q\2710\230]\271t\371\231\271\277!$:\334\301\3368\320\271\3329y>\3028^\302\3739\002\002\2009\'\035\370\271\350L\275\272\251\364\200\270|\206\031:\021\235\2439t\365\2308\323w\2148\\\232\002\272J\236/:\003z\t:\361\334\034\271w\033\023\272j\222\332\271\315\270\020:\021\265\200\271J\264S\272E\264\004\272\377!\2239\372\213\026\271\372\215\242:\343b\3429R\241\2449\233\266\213:S\243\341\271m,>9\350\001\203:\001\274%:\273H\370\270\211]\3318\350\000\3268\330\220\3467\007A\3279\357\252z9\017e\204:\262S\270\272\210\362\2528\260\'\204\272\377\370`\271\273\333\t:!\300\021:\376\242L:-\024Y:\303\344\2549\322d\220\270\023\036\223:\247:\203:f_\237\271\2364\017\272\251\366A\272\224W\005:\032\333\0139\035\251\317\267\227\325\2229KmJ\271\372\263\350:qOt:\262\334\037\272\262\214\2767\2566\3618O>\202:\231\244j8e@69\223r\017:L)\301\272\354\rL\272\007=]:\352\002\030\272\n\332i\272)\321?:\006\374\370\271\307\310J\271\256k\3778\273s\2519l\334\303\271MA\367\271\351\35649u\217\312\271h\323c\272J\007d\271\255\302.\272\036j|:\205\227\2368\352\334\0219\353\245Q\271D\236\033\272\024\374L\272\020\3508\271Xak9\347m;9u\321\2769\374\335\304\271,\353\3268\207Q\2018\"n\2148754\271\203\255\0329Fc[:\2700\316\271\003\003\030:v\036\230:\356fx9\212D\211\272[c\236\271x\376c:rb\007\271\323\353-\272\361-#:_\351a\271\372\2620:\211\335\341\270\210\257>:\215\025\374\271w\007\345\270\377\237d9\364\330M:F[j:Cb5\272\215\374\230:\225\017G9\257\203\365\271Y\255\225:\277p\256\270K\236f\272\244\023\272\271z\030g\272d\271\200\266\263\006]\271\206d\3639\216\312b\267\"\314{9\007\356\263\271wRF\271\202\226m:~\302\002:=\351\3049x\2645\272\205\344\035:\223\210\204\272\320;c9\242\207\226\272\233\003h\272\314\337\272\272b\233-\272%\267\'\270r\030U9\210\014\3208\201Z\306\271\355Z[9P\216\3049\355\312\264\272S\305\247\271\363]\205::L\2148D\225\000\2704p\2369y\334\201\2713;,:\372\263\2238/\376\235\271\206\326 \272\26374\271\340\376\3229\255\331\014\272\345\005\3159\2334,:*\350\221\271\345\204d\272\006j\2068\340Q\\\271\002\333\351\272A\230\200\271uD\232\271\010oH9.\0237:\373E\2109\023\350\335\271z\\0:)w\034:\334A0\271B\3730\272\215\016\0369\313G\247\271E\263W\271\375\024\206:\222kB:\231\363\255\271\244\246H\271\321\202k:E\310\2279\322\245!\270\24060\272\r\305~:\364\023v:\023\\2\272\362\3634\272\317\256\025:\022\200u\272\220v6\272\027[`9F\223\2279x\t\261\272\377\031#\272\346B\3469\223\021\3649\362\227\206\270;\352\230\271\213?y\270\016Qo\271\205Y\30699\037\230\272A\274\221\271\220L\236\272\320Ug\271\344\201\232:\341\344\232:\224\005\000:Z#\210:u\220\2549\211\377\2109\032\331\034\272\232\245y\271L3\305:\250\257\226\272iO\2049\225\005\2448\255\206\0279\232l\324\270\374\352\204\272\014\\\262:\225S\034\270\201Va\271\021d\232\271,>\n:\220\227\3269Z\207d9\226\362\257:\222\226\357\271\035Q\203\272\0300\2439\233\367)\2729@\204:D;\3738\007a%9k\372q\272\342\300\266\271\004\376\271\271\320\325\245\270\265\036\016:^K\215\271\253Tl\272\267\215\245\271\213\267\2768\374\233D:\376\350\030\272\213\030\252:[\220\2159E\240\215:+\246\020:\375#h9\347\210c\272n/1:\205\'\013\272\372\235@\271\210q\302\271b\272O7\322(J8\276\352\360\271\334\331\325\271\030V\0329\375\013t:\250\264\233\271\'\216\232\270\026\324\232\272\002&\352\266<X\002\272\206\275\242:@%[:u\312G\272\252\261\000\272\367&\0039\035\360\0349\342\326\3429\002\335r:\277\244/:\270\340\25099\022\\8I3\n\270.\001\271\271\314/\232\271\352\350\230\272=\016;:E|j9\037\260\331\270\270i\266\271\360\267\246\2673R\00299\034\204:\034S\3639\013\242X:\270\n\3269\217)\032\272\206A\030\272%U\300\266&Xf\272\010\251_:\355\'R:\361,\237\271\275\242\006\272\003d\244\271J\234\3629Y0\351\271\267\032\244\271\"|\3509i\231\3419\257-\262\271S\3249\272\221\306\242\271\025\326#7B\272%\271\315:\205\272M\n\033\272\242jk8H\251\2069\031\241\355\271\n\365_\2728\353\2107\345;\333\272S,K:\233C\215\271(w\2339\360\333\2729\242\321\232\272\235\336\321:\345%&:\256\265M\271\373*\255\271\230\350a9\372\036\2159\306>\223\271\316<\227\272\010dS9\222D\210\272\266$\037:\233G\2609\031\'\202\272\0104\025\272W\213\247\271\315\224\203:\327\230\263\272D\217m:~\231\2219v\300>:~\004\t:\367\301\3259\355?M9\361\277\233:\263V\022\271\213Vi:\243k\275\2720\300>\272X\3559:w\177\030\271A\234\211:\366A\007:?\1773\270\323Rp\272m\277P\272\227\254\3039\343\314\3158\202\347\2039\352\010\22699]\213\271\242\037\261\2718U\000:\002\010\266\272\014yH:s\271\2319p\000\205\2719\242\024:\254\004\036\272\027\205\344\266m\033P\272_\316\002:7\346#\272\276y\2548\334\031V:\322\371r\272\030R\3279\320\177\3078\200a(:-7/\272\242vT:V\223\017:\033\235\2218\205\255\245:\223~t8j\303\000:}S\036\270\333\253@:\016\034\240:rV{\272c\341g:\332\344\2679\201\262A9\352\304p\271\000\021\343\272\003x\2647]7\2619\355\334\221\272\003Jw7(\235\274\271\016u\003:\215\214<\272\311\007\r9.r\247:\321\262\320\271\322~U:\230\253)8U\032\33692\017\032\272&\3359\272\325\235;9.\277%\272\333\201\3259lh\315\271\245\361\3209T\020<:\264\342\3579\322\177\000\272\312\246\2419G\326\255\272J\275\2409\361\304b\271\332\303\253\271\252\013\3709\273\275\005:s\324\002:cL):\225\325=\271\0178\217\272\025`\262:\221=:\272\372d\255\272\231\317):P\r\016:b\244\347\270M=\024:#\337\263\270\264\254\2239E\245\030\272\271\320\315\271s\240\202:\257\274\2409\036\361\267\271\247\320V\272\244\2737\271\003\305\0179#p\270\271\347\372\0169\035LS\272mB\017:}\240u:\321n\2275V\267\0319e^\2769)oT:|\355W8\014\351\017:\203D\031\272\227\302\n:\350\215>\272\231h\345\271\224\320_9\203G\0179\2140\3758\r\363\236\271\315\360\033\272a\017\'9\272s\3149\203R9\272gx\354\271\272qB\271\353\350\030\272\005\300\217\271\363\300\3209\317\260\375\270\376\243\333\272\330\213\002\272\034\0015:\210\033Q9u\311o\270\\)<:\214\202\364\271\375\3249:\212|\205\272\246*\227\272\341T\232\270,\373\2129\305\227\204:G\2244\272d]\251\271\324\007\3227\350b\362:\3647\027\272L\344\205\272\347\312~9Rj\3559\177W*\270\336e\373\271\027B\376\271\035Y\n:jZi:8\363\2578\307`\036\271&\016\033:Ii,\271!\224\243\271\307\372{9\214\352j88\250)\272\332\276\201\272\364\010\207:\3702\3579\247\340\376\271&\336E9d1\t\271\361\265\373\270\335\214I7*\274\2458\016\322t9z\324T:\022j\035:\271\254\022\272\326{\271\272U\361\"\272]\234\246\2721\302f9v[\323\270\231\001\302\271\252d\3309\006\024\241\270\361pr:\3728j\271\032h\2058tG\220:\250`\241\270\314\006\3519\023\317\333\271u\243\260\271\337\324\251\267\006#,\271;\270\005:\031C1\270_\326\374\267\365\343\2539~\016I\271\354^P88\277\023\272\331\340\354\271b\0144\272\244\006\2068\373z\010:\371\231\356\272a\347*\272E\006\3178\202\263\031:\333W\000\2728.\026\271+\340\341\271[4\312\271\263\001%:\024\363\237\271\306+\3018G\201\212\271\200\372W\272\rA\2279\276\014C\271\\\037\225\271\204@k:9\377\3369\313`x:\256\370\2229\240\001Q\272\030\027V\272\3225\254:\201\321\223\270\343]\000\272I\263?\271\346\274\355\271\363\316Q\272\n1~9\026?\3319\242yT:\016\200H\272\233\2552:k\215\365\271\177\340\267:\010R\2759X\351\0179\235\006\331\271O\326\024:\016c`\271\362)Z\270(q\325\271\036\207\233\271z\204c\2720w/9\220n#:Q\014\311\271\276\253\2518\250\266\216\272\033\345\2619\245H\252\272/\353%\273\376\252c\271chF9\232\215\217\270\217E^\272\352u\253\270\225\237\232:\366\271\215\2718*q9\035Gp\2727\306\343\271\214ZS\272:\032\2279.\263\203\272\313\020\177\272\r\024t:;\245\3119\321\353\022\272\224\260\253\272\036\021\210\271n\232\321\271\327\244\027:\277J\244:\2660\366\271,\2476\272\001\223\205\272\014Y\272:\201\305\2029U\344\352\271O\014\3129\205\371\010\272\377\222\2618\375w\37499\216]:\026\261\311\271\350b\3479aTh:\227\237\026:\243\302.9b\2338:\243[\03596\311\257\272 \222\t\272\325\344\0169\316\2538\271\031\031\264\270\013\222\2179eu\253\271&{1:\253,&\272\312\227\200:o\214\2219\340\247\2708&\330(9`^\22277\355\374\271OW\2519+`\331\271^~u:i,290\323U8%\320\242\266\217\037E\272\204\227\030\272\034`\3059{I!:\277\030\014:\024\264\311\271\201B\233\272\024\006\255\272\021\211P\272\343\n\3037\307\270\257\270\244\"48Z\267\300\271\363\3750\271\376\3776\272\264N/9r.\256\270pL\375\267v\363b\271\177\325\232\272\210}\212\272\235\033-\272\310\320\327\271\245B\025\272H\320\2638\362AC:\r(a\271WU\331\271ZRr9\351:\265\270Z\261\3639E\354*\271\351-\2309\250\374\3369\020\027\204\271\362C\2169\374\223\200:\234\255\2748.\030\3508W\261\257\271\240T\2739)\330\2479\234\315\3569*\265\032:3\312L:a\222\251\271\2665\3008C\03339\351p`\271|\003p\271\314Q\0349?qk9\306\264\3129\262O*\272\356\330\032:\027\215\236:\324\313G6\304T\241\272\0271\2129\027\235\2778U9.9\272\343\235\271M\\\354\271\333\306?\270.\0325\272\267\217\3009\026\013\0249\322\t\233\271z5\244\271\006\304\2079\250\340\227:M\013/\272\021\215_:\232\223\005\272\313*\273\271l\304\210\271?\341j:[=\n\272\355\224n\270\026\300=9\360\222(\270\353\374;\272\026\000\005:\366\210\21296t\257\271v\372\252\272\336\343\333\271{\226\274\272\234C8\272k\217\013\271\363\363 9\352\005\377\265\341\027\027:\230\342n\272W\014\334\271cR[9\226\271\001\272\230?\3159\360\006\260:F\366\2368\301608\037\206\2548*\347\022\271\013S\023:~x)\272C\001s:\372\315\200\2725\026\032\272JXO\272r\223\r\272u\207\030:U)\272\271e5\244\271$J\014\272\315?\027\271\321\343\302\271\327\267\243:\231p\364\271\226\215\3729on%\271J\'R\271\206xk:!\256\016\272\356)\210\272\240\304\313\271o\264\223\272S\016\2639\360\243\214:\270\003\020\272W!\2229\005c \272AZ.:\352U\3029\361\275B\272\336sK\272\217:\2539-f\354\271_\333\2179?\022\2119\317\2053\272\331[\213\271I\272N\272\362 G:\236\312\2519\023W;8n\347\351\271W\270\357\271\366\265\2609\212\336\2519\016G\232\272\320\365\240\272\262?Q\2715]\235\272h\252f\271\032x\002\272;\354\025\271\314\204\273\270\337\267/\272\350\366\021:\036\241\000\272\255\243\006:\207\304\254\272f\331\033\271\313\363\036\272%fq9K\311\007:\225\300\236:M\214\327\271\023C\2409\357\032\3258\300U\t9_\363E\272(C\2159\027\223\243:4^W7h\237p:\344\327M9\204Q(9\023\214\275\2707\303\257\270\333\270\'\271V\235\272\272u\335k9\325\260\341\270`[?9!6\330\271\351\325\005:\037\343\2359\240\031>\272l\331;8OR\023\271Z/\2579\247\274\026:U\371\204\271\245`9:{\225\206\272\302\274\216\271;\211\310\270\336SY\270\362\323V9\\\023\207\270\237\017\017:\254j\301:\203\362\202:\336t\2359}v\233\270?U\035:b\342`:\366Qp\271\240\344p98\265\0028\325\300#:\027g\2649#\335R\272B\315\200\271\374\347\221\267\363xU9\362\t\2159\374\316z:\270\342{9\365%\024\271\343\0209\272z&\021:\310C\005:@\277\267\272e/\272\271G\356\3239\300\212*\271%\376y\272\337h\342\270\235Q<\272\305\r^9\260h\347\270\345\356A:\203\017\2149\264\355\3368\352a\346\2702\031\t\272(\277\2228\204\320\3117\300\345\242:\246\277n\270\372\270\224:D)\2269\"\333\220:\305|\3359\253\263\3068\355\365D\272\324&19\242N\2049*\222Z\272a \220:\350\271\001\272^\247\246:\353\240\202\272~\004\"\272\333c\310\271=\264\247\271\274Y]\272\376\343\345\271\303\031\3179\0138\356\270l\207\331\270\032\005\2679v\275\225\272\036^\324\271As7\272\217\203\210:\210\331\0269&:\301:h\323\2439\310\034\242\270\350\'\0019t\344\254\270\367\326\3678\206A\002:\303\362;\272L\376\250\272^sH\270E\325\035:\"O\001:\376w\357\271Xw\257\271\204\321\206\271\232\371\264\272!kW\272\335Ug\271(f\023:S\242m\267\232@\034\271\351\244\3369\305l\004:n\021[:\314?\t\272J\"\\\272\024id\271\261\214\2029\314\323n\271\241\000\362\270\211\n\234\271>\006\210\272:\363Q9\344\022_\271\356\2557\272\236\033\305\270\246\n\317:\376\202\357\2703R\3409\333\276\3309"
      }
    }
  }
}
node {
  name: "global/dense/kernel"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense/kernel/Assign"
  op: "Assign"
  input: "global/dense/kernel"
  input: "global/dense/kernel/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense/kernel/read"
  op: "Identity"
  input: "global/dense/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense/bias"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense/bias/Assign"
  op: "Assign"
  input: "global/dense/bias"
  input: "global/dense/bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense/bias/read"
  op: "Identity"
  input: "global/dense/bias"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/MatMul"
  op: "MatMul"
  input: "global/Reshape_3"
  input: "global/dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/dense/BiasAdd"
  op: "BiasAdd"
  input: "global/dense/MatMul"
  input: "global/dense/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/dense_1/kernel/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\321[\310\275F\277\223\275J\213\305\273\276\275\330=N\275\205\275g\010M\275\232\317J=\020\304\034=4\033\224\275\326\354\031<\250\326`9,C\270\275O\275i=\270\244\367\2742|\344\273\037\347\014\275p&\276\274\242\030\002\276T\334U\274\350\021\242\275\215\316\202<\353\230\274\275\353\222P<\223Y\312=\371\357\325<\377\250f=\251;\270;Z\350\255\274\331\313u;A\316\277\274W\270+=\206\n\360\274\017pc=Z\2618<\222\210\203\275\375\254\005=\004\024\001\2754\353><\311Fp\275\rs\244\273\361b\014\276q\275\233<9\001\334\274\335\t\335\274)b9\275\2551\273\273\303\356\022=\320F\272\273\330\r\364\275b\r\251\274\315\365\217\274e1J\275\221\025\027>\220\304\r>\205\003\210=@\017<=\372\241\204=f\204\242\275\375]\220\275\344\\\352\275-Z\257<Tw3\276\306+\234=^\371f<;\030\220=o\246\240\275\233\274C\275\261Y\251=Tm\211\275H`\213;\264X\017\272\007e\270\275$\232\013\276c\3458\273D\017Q:1\013\261=\221\334W=.2\270\275\321mz\275\'\236\215<#\326\n\275E%\017\272\373\355\212=ioU=\250\205\177\274o?$=\243<N\275\r\254\016\275\177!\305=\217\000.=\345[\n=\\)|\275h\217\353\274\227\235\243\2748\t\227\275sp\200\275\257\351\341<\321\246J\275A\227\203\273\341\005_\275\267\360\367<b\233\244=\341\035\227\274\374\2303\275\341(-\275\020\254\260\275E\274\333=\355R\357=\231\243\344<\007X\024=\005(\030=\362~\224\275#\370n\275\325-\027\275\222\360\035\2758\201\365\275\210\316\312\273\306\272\261\275}\316\341\273\220\232\324\275E8\261\274\031\356\264\275\336\353\004\2758V\'<\037\331\376;A\260\023:s\244Q<\023\242\020\276&\213\301\275>\302\224<\334\001\203<\\U\235\274I\221\377=p\271\350<Q\214A\275\342h\003=\352\244\325\2748\214\007>\010k>\275\010#\221=\315\272\277\274E\263\224=\370\340\363<\330Xo=\r\371\2119\321\t\274\274\312\304\376;a?\212;\224\275\035\275\026\230x=\235\026\316<w\226W\275\021\220\336=\377\266L\275\363\024\225<O\221\242=/\221\n<\025\021\245=\332Di\274\314\004\234=\025\363\236\274yf\210\275%\323C\275\311#y\275\210\030d=/\360\343:R\344\024=\323\273\325=Ud$=\375N\002>\276\255\340<@\033\212\273\207M\265=5\216\240=Q>\232<\314c\225;\021\313Z=\210\027\234\275\215\336I\274}\024\215=\356\236$\274\2420D\275\014\314\365<\311\226E<\361-\\\2746\224\325=\306Kl<t_\004>#\376\350=\351a\025=_+}\275yR\013<\037y\"=\263\327\275\275\246\217\206\2758O\033=Wk\254\275x;\225\274O\036\022=\324\027;=ZA:=$g\363:\312\240N\274tM\236<\303a\017<\354{\362;\016\340\376<\025\317A>G\260y\275<\025 \275\362\217l<-\025\223\275\036\204\210\275\201\252\004=\373/\316=[\030\324<\363\320 \275\344\214J\273\372\273\t\2763\274\310<\325q\214=@6\246\275\030\275\"\2755\377Z=\270\317\236\274Sg\243=\266\261\227\275\005\312\250=\336\310\313=o\\\271\273v\221\203=\256(\034\2748Y\245<w\022\254=\364\233\253<\317\033\314\273\370/q=\276\320\001\275-)\243\275\016o\022<\347\016\023\276\344\2201\275\326)\277\274\203\213\351={\323\207\274\371\206\217<\263\375V=w\235\361<\341\211b=3\301\323==\336\035\275\326\313\212\274g\030\247\275[\227\361\2742\347\321\275\343\347\334\274"
      }
    }
  }
}
node {
  name: "global/dense_1/kernel"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense_1/kernel/Assign"
  op: "Assign"
  input: "global/dense_1/kernel"
  input: "global/dense_1/kernel/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense_1/kernel/read"
  op: "Identity"
  input: "global/dense_1/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/dense_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense_1/bias"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense_1/bias/Assign"
  op: "Assign"
  input: "global/dense_1/bias"
  input: "global/dense_1/bias/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense_1/bias/read"
  op: "Identity"
  input: "global/dense_1/bias"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/dense_2/MatMul"
  op: "MatMul"
  input: "global/Reshape_3"
  input: "global/dense_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "global/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "global/dense_2/MatMul"
  input: "global/dense_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "global/Reshape_4/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "global/Reshape_4"
  op: "Reshape"
  input: "global/dense_2/BiasAdd"
  input: "global/Reshape_4/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_1"
  op: "StridedSlice"
  input: "global/rnn/while/Exit_2"
  input: "global/strided_slice_1/stack"
  input: "global/strided_slice_1/stack_1"
  input: "global/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_2"
  op: "StridedSlice"
  input: "global/rnn/while/Exit_3"
  input: "global/strided_slice_2/stack"
  input: "global/strided_slice_2/stack_1"
  input: "global/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Max/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/Max"
  op: "Max"
  input: "global/dense/BiasAdd"
  input: "global/Max/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "global/sub"
  op: "Sub"
  input: "global/dense/BiasAdd"
  input: "global/Max"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/multinomial/Multinomial/num_samples"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global/multinomial/Multinomial"
  op: "Multinomial"
  input: "global/sub"
  input: "global/multinomial/Multinomial/num_samples"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "global/Squeeze"
  op: "Squeeze"
  input: "global/multinomial/Multinomial"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "global/one_hot/on_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "global/one_hot/off_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/one_hot/depth"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "global/one_hot"
  op: "OneHot"
  input: "global/Squeeze"
  input: "global/one_hot/depth"
  input: "global/one_hot/on_value"
  input: "global/one_hot/off_value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "global/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "global/strided_slice_3"
  op: "StridedSlice"
  input: "global/one_hot"
  input: "global/strided_slice_3/stack"
  input: "global/strided_slice_3/stack_1"
  input: "global/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "global/global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global/global_step"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/global_step/Assign"
  op: "Assign"
  input: "global/global_step"
  input: "global/global_step/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/global_step/read"
  op: "Identity"
  input: "global/global_step"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/Placeholder"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/conv2d/kernel/Initializer/random_uniform/max"
  input: "local/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "local/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "local/conv2d/kernel/Initializer/random_uniform/mul"
  input: "local/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d/kernel/Assign"
  op: "Assign"
  input: "local/conv2d/kernel"
  input: "local/conv2d/kernel/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d/kernel/read"
  op: "Identity"
  input: "local/conv2d/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/conv2d/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d/bias/Assign"
  op: "Assign"
  input: "local/conv2d/bias"
  input: "local/conv2d/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d/bias/read"
  op: "Identity"
  input: "local/conv2d/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d/convolution"
  op: "Conv2D"
  input: "local/Placeholder"
  input: "local/conv2d/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d/BiasAdd"
  op: "BiasAdd"
  input: "local/conv2d/convolution"
  input: "local/conv2d/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/conv2d/Elu"
  op: "Elu"
  input: "local/conv2d/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/max"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "local/conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_1/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d_1/kernel/Assign"
  op: "Assign"
  input: "local/conv2d_1/kernel"
  input: "local/conv2d_1/kernel/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_1/kernel/read"
  op: "Identity"
  input: "local/conv2d_1/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/conv2d_1/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d_1/bias/Assign"
  op: "Assign"
  input: "local/conv2d_1/bias"
  input: "local/conv2d_1/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_1/bias/read"
  op: "Identity"
  input: "local/conv2d_1/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_2/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_2/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_2/convolution"
  op: "Conv2D"
  input: "local/conv2d/Elu"
  input: "local/conv2d_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "local/conv2d_2/convolution"
  input: "local/conv2d_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/conv2d_2/Elu"
  op: "Elu"
  input: "local/conv2d_2/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/max"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/mul"
  input: "local/conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_2/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d_2/kernel/Assign"
  op: "Assign"
  input: "local/conv2d_2/kernel"
  input: "local/conv2d_2/kernel/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_2/kernel/read"
  op: "Identity"
  input: "local/conv2d_2/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/conv2d_2/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d_2/bias/Assign"
  op: "Assign"
  input: "local/conv2d_2/bias"
  input: "local/conv2d_2/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_2/bias/read"
  op: "Identity"
  input: "local/conv2d_2/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_3/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_3/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_3/convolution"
  op: "Conv2D"
  input: "local/conv2d_2/Elu"
  input: "local/conv2d_2/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "local/conv2d_3/convolution"
  input: "local/conv2d_2/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/conv2d_3/Elu"
  op: "Elu"
  input: "local/conv2d_3/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/max"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/mul"
  input: "local/conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_3/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d_3/kernel/Assign"
  op: "Assign"
  input: "local/conv2d_3/kernel"
  input: "local/conv2d_3/kernel/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_3/kernel/read"
  op: "Identity"
  input: "local/conv2d_3/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_3/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/conv2d_3/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/conv2d_3/bias/Assign"
  op: "Assign"
  input: "local/conv2d_3/bias"
  input: "local/conv2d_3/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_3/bias/read"
  op: "Identity"
  input: "local/conv2d_3/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/conv2d_4/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_4/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/conv2d_4/convolution"
  op: "Conv2D"
  input: "local/conv2d_3/Elu"
  input: "local/conv2d_3/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "local/conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "local/conv2d_4/convolution"
  input: "local/conv2d_3/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/conv2d_4/Elu"
  op: "Elu"
  input: "local/conv2d_4/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 2
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "local/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/transpose"
  op: "Transpose"
  input: "local/conv2d_4/Elu"
  input: "local/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "local/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377h\000\000\000"
      }
    }
  }
}
node {
  name: "local/Reshape"
  op: "Reshape"
  input: "local/transpose"
  input: "local/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "local/Softmax"
  op: "Softmax"
  input: "local/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "local/Reshape_1/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\010\000\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "local/Reshape_1"
  op: "Reshape"
  input: "local/Softmax"
  input: "local/Reshape_1/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "local/transpose_1/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/transpose_1"
  op: "Transpose"
  input: "local/Reshape_1"
  input: "local/transpose_1/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/ExpandDims"
  op: "ExpandDims"
  input: "local/transpose_1"
  input: "local/ExpandDims/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims_1/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/ExpandDims_1"
  op: "ExpandDims"
  input: "local/Const"
  input: "local/ExpandDims_1/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/mul"
  op: "Mul"
  input: "local/ExpandDims"
  input: "local/ExpandDims_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "local/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/Sum"
  op: "Sum"
  input: "local/mul"
  input: "local/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/Reshape_2/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000"
      }
    }
  }
}
node {
  name: "local/Reshape_2"
  op: "Reshape"
  input: "local/Sum"
  input: "local/Reshape_2/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "local/ExpandDims_2/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/ExpandDims_2"
  op: "ExpandDims"
  input: "local/Reshape_2"
  input: "local/ExpandDims_2/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "local/Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/strided_slice"
  op: "StridedSlice"
  input: "local/Shape"
  input: "local/strided_slice/stack"
  input: "local/strided_slice/stack_1"
  input: "local/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Placeholder_1"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "local/Placeholder_2"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "local/transpose_2/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/transpose_2"
  op: "Transpose"
  input: "local/ExpandDims_2"
  input: "local/transpose_2/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "local/sequence_length"
  op: "Identity"
  input: "local/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/Shape"
  op: "Shape"
  input: "local/transpose_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/rnn/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice"
  op: "StridedSlice"
  input: "local/rnn/Shape"
  input: "local/rnn/strided_slice/stack"
  input: "local/rnn/strided_slice/stack_1"
  input: "local/rnn/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/rnn/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "local/rnn/Shape"
  input: "local/rnn/strided_slice_1/stack"
  input: "local/rnn/strided_slice_1/stack_1"
  input: "local/rnn/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/rnn/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/stack"
  op: "Pack"
  input: "local/rnn/strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/rnn/Equal"
  op: "Equal"
  input: "local/rnn/Shape_1"
  input: "local/rnn/stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/All"
  op: "All"
  input: "local/rnn/Equal"
  input: "local/rnn/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/rnn/Assert/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/rnn/Assert/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/rnn/Assert/Assert/data_0"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor local/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "local/rnn/Assert/Assert/data_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "local/rnn/Assert/Assert"
  op: "Assert"
  input: "local/rnn/All"
  input: "local/rnn/Assert/Assert/data_0"
  input: "local/rnn/stack"
  input: "local/rnn/Assert/Assert/data_2"
  input: "local/rnn/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "local/rnn/CheckSeqLen"
  op: "Identity"
  input: "local/sequence_length"
  input: "^local/rnn/Assert/Assert"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/Shape_2"
  op: "Shape"
  input: "local/transpose_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/rnn/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "local/rnn/Shape_2"
  input: "local/rnn/strided_slice_2/stack"
  input: "local/rnn/strided_slice_2/stack_1"
  input: "local/rnn/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/rnn/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/strided_slice_3"
  op: "StridedSlice"
  input: "local/rnn/Shape_2"
  input: "local/rnn/strided_slice_3/stack"
  input: "local/rnn/strided_slice_3/stack_1"
  input: "local/rnn/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/rnn/stack_1/1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "local/rnn/stack_1"
  op: "Pack"
  input: "local/rnn/strided_slice_3"
  input: "local/rnn/stack_1/1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "local/rnn/zeros/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/rnn/zeros"
  op: "Fill"
  input: "local/rnn/stack_1"
  input: "local/rnn/zeros/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/Min"
  op: "Min"
  input: "local/rnn/CheckSeqLen"
  input: "local/rnn/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/rnn/Const_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/Max"
  op: "Max"
  input: "local/rnn/CheckSeqLen"
  input: "local/rnn/Const_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "local/rnn/time"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "local/rnn/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "local/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "local/rnn/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "local/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "local/transpose_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "local/rnn/TensorArrayUnstack/Shape"
  input: "local/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "local/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "local/rnn/TensorArrayUnstack/strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "local/rnn/TensorArrayUnstack/range/start"
  input: "local/rnn/TensorArrayUnstack/strided_slice"
  input: "local/rnn/TensorArrayUnstack/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "local/rnn/TensorArray_1"
  input: "local/rnn/TensorArrayUnstack/range"
  input: "local/transpose_2"
  input: "local/rnn/TensorArray_1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Enter"
  op: "Enter"
  input: "local/rnn/time"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/Enter_1"
  op: "Enter"
  input: "local/rnn/TensorArray:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/Enter_2"
  op: "Enter"
  input: "local/Placeholder_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/Enter_3"
  op: "Enter"
  input: "local/Placeholder_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/Merge"
  op: "Merge"
  input: "local/rnn/while/Enter"
  input: "local/rnn/while/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Merge_1"
  op: "Merge"
  input: "local/rnn/while/Enter_1"
  input: "local/rnn/while/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Merge_2"
  op: "Merge"
  input: "local/rnn/while/Enter_2"
  input: "local/rnn/while/NextIteration_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Merge_3"
  op: "Merge"
  input: "local/rnn/while/Enter_3"
  input: "local/rnn/while/NextIteration_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Less/Enter"
  op: "Enter"
  input: "local/rnn/strided_slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/Less"
  op: "Less"
  input: "local/rnn/while/Merge"
  input: "local/rnn/while/Less/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/LoopCond"
  op: "LoopCond"
  input: "local/rnn/while/Less"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Switch"
  op: "Switch"
  input: "local/rnn/while/Merge"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Switch_1"
  op: "Switch"
  input: "local/rnn/while/Merge_1"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Switch_2"
  op: "Switch"
  input: "local/rnn/while/Merge_2"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Switch_3"
  op: "Switch"
  input: "local/rnn/while/Merge_3"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Identity"
  op: "Identity"
  input: "local/rnn/while/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Identity_1"
  op: "Identity"
  input: "local/rnn/while/Switch_1:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Identity_2"
  op: "Identity"
  input: "local/rnn/while/Switch_2:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Identity_3"
  op: "Identity"
  input: "local/rnn/while/Switch_3:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "local/rnn/while/TensorArrayReadV3/Enter"
  input: "local/rnn/while/Identity"
  input: "local/rnn/while/TensorArrayReadV3/Enter_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06681530922651291
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06681530922651291
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/max"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform"
  op: "Add"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/Assign"
  op: "Assign"
  input: "local/rnn/basic_lstm_cell/weights"
  input: "local/rnn/basic_lstm_cell/weights/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "local/rnn/basic_lstm_cell/weights"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "local/rnn/while/TensorArrayReadV3"
  input: "local/rnn/while/Identity_3"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  op: "Enter"
  input: "local/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/biases"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/biases/Assign"
  op: "Assign"
  input: "local/rnn/basic_lstm_cell/biases"
  input: "local/rnn/basic_lstm_cell/biases/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/rnn/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "local/rnn/basic_lstm_cell/biases"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  op: "Enter"
  input: "local/rnn/basic_lstm_cell/biases/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/split"
  op: "Split"
  input: "local/rnn/while/basic_lstm_cell/split/split_dim"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/add/y"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/add"
  op: "Add"
  input: "local/rnn/while/basic_lstm_cell/split:2"
  input: "local/rnn/while/basic_lstm_cell/add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "local/rnn/while/basic_lstm_cell/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/mul"
  op: "Mul"
  input: "local/rnn/while/Identity_2"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "local/rnn/while/basic_lstm_cell/split"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "local/rnn/while/basic_lstm_cell/split:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "local/rnn/while/basic_lstm_cell/Tanh"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/add_1"
  op: "Add"
  input: "local/rnn/while/basic_lstm_cell/mul"
  input: "local/rnn/while/basic_lstm_cell/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "local/rnn/while/basic_lstm_cell/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "local/rnn/while/basic_lstm_cell/split:3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "local/rnn/while/basic_lstm_cell/Tanh_1"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/GreaterEqual/Enter"
  op: "Enter"
  input: "local/rnn/CheckSeqLen"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/GreaterEqual"
  op: "GreaterEqual"
  input: "local/rnn/while/Identity"
  input: "local/rnn/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Select/Enter"
  op: "Enter"
  input: "local/rnn/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/Select"
  op: "Select"
  input: "local/rnn/while/GreaterEqual"
  input: "local/rnn/while/Select/Enter"
  input: "local/rnn/while/basic_lstm_cell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "local/rnn/while/Identity"
  input: "local/rnn/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Select_1"
  op: "Select"
  input: "local/rnn/while/GreaterEqual_1"
  input: "local/rnn/while/Identity_2"
  input: "local/rnn/while/basic_lstm_cell/add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/GreaterEqual_2"
  op: "GreaterEqual"
  input: "local/rnn/while/Identity"
  input: "local/rnn/while/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Select_2"
  op: "Select"
  input: "local/rnn/while/GreaterEqual_2"
  input: "local/rnn/while/Identity_3"
  input: "local/rnn/while/basic_lstm_cell/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "local/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "local/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "local/rnn/while/Identity"
  input: "local/rnn/while/Select"
  input: "local/rnn/while/Identity_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/add/y"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/while/add"
  op: "Add"
  input: "local/rnn/while/Identity"
  input: "local/rnn/while/add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/NextIteration"
  op: "NextIteration"
  input: "local/rnn/while/add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "local/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "local/rnn/while/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "local/rnn/while/Select_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Exit"
  op: "Exit"
  input: "local/rnn/while/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Exit_1"
  op: "Exit"
  input: "local/rnn/while/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Exit_2"
  op: "Exit"
  input: "local/rnn/while/Switch_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/while/Exit_3"
  op: "Exit"
  input: "local/rnn/while/Switch_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "local/rnn/TensorArray"
  input: "local/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayStack/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayStack/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayStack/range"
  op: "Range"
  input: "local/rnn/TensorArrayStack/range/start"
  input: "local/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "local/rnn/TensorArrayStack/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "local/rnn/TensorArray"
  input: "local/rnn/TensorArrayStack/range"
  input: "local/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "local/rnn/transpose/perm"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "local/rnn/transpose"
  op: "Transpose"
  input: "local/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "local/rnn/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/Reshape_3/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\001\000\000"
      }
    }
  }
}
node {
  name: "local/Reshape_3"
  op: "Reshape"
  input: "local/rnn/transpose"
  input: "local/Reshape_3/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "local/dense/kernel/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
        tensor_content: ">:\3309\361\360\3018\344\2309\272\244m\221\272r\213\265\2713\r\316\271\273n>:\n\177+:;\271\206\272:\233`\271\307GN:\332\014i8\321\201\361\272\357\312:\270\260}\207:\317y\211:\241/\331\270\017k\"\272B\357\321\270f\230\2749\372\345\333\271\264\313y9\320\214\221\272\245\036Z:\351\205j\272d\336\3759\026\256\3039\314\355\3719\014\023\034\272\302Y\302:\233\016\0368R\342\233\271\361B19\224|?9\030\334\023:\362R\267\271\333T\007\271\025/]\271w\260\304\271}<d\271\010/\2309L\277\3739\006\3034:\023\324\343\271\222\315\035\272\332\2105\272\237}\005\272\351\245m:\350\"j:\275u\275\271\217\326B:\246\322\305\271u\232A9\347\007\\:\327\320R:\"\r\0028\331x\204:tR\244\271j6\36291\366\3349?\320C\272\341\204\205\271\210Y\306\270!\177\007:\321C@:\272\235\346\270-\342\245\271\320\233\":\351\005\360\271o%\022\272L\222\330\271f\272\2409\212+C9V\256\2129\336\217 :!?b9\267(\327:\0261\004:\222\025\2569\322\033\254\271-\316\304\272O\225\256\271C\246\276:\010\361\252\271E\022\262\270h\360)\272\351_k\272\231jE:h^\230\271\027\254\3608s\332\235:\352\274B\272H\350n\271\300\3046:\343\227/\271K\235\2128\354\332*\272\260\373\3607\375\235\221:\347\330\033:|\310\020\272\026\342\252\271=_\036\272a\346\2579@\267|9AY\210\271\022A\005\272\341\222)9\234\305m8=g<\272\3503\033\270\021FB\272Bb\035\272k\277\0058\373\234$9\251\005D\272\250O{9BT\2378\337\237[\271\376\312\r:*\261S:+~\006:\265\006\304\267\016m\365\267\305S\350\271(1\234\271\317\322T\272\370\227R:\263;\003\271\357\352[:Z\275\370\270\243\300\2129\312\330C:\270\371\361\270\255\353\0209\'\337|9\260W\":\321w\335\271\005 !\271e\nO\272\026\212|\271h\326 :o\232\n:\3707\021:r`\3618\013\016e\271\226F\3258\0176\227\271\177\340\005\271r\014\016:\302\007u\272+\355\2619c48\271\350\2320\271\210\346\266\271\326\315y\271)\273\t\271\031\325\265\272\005\035\245\270R\221\036\272+\246y8\233\t\010:8\325\022:6g<9\336\230\005\271\250\241\017\270\364g\211:jP\241:\223\352\204\272D\\\0239\006\256\3679\276W~\271\002G\\\271!\3157:\207y\225\272rS\0379S\2368:\224\205*:\3039\252\271\260\336\242:\r\250D\266^\312\312\270%\367\2709P\234\273\271\310\220\214\272\326\230\2308\035\213\005\272\224U\0309\025\335\215\270\345\010H:u\347\022:e\033\020:T\225\315\270\221V\211\271\201M\3759\005\355C\272\003\342\254\271t\020\3138\251\215\0109\326\227g\272\270A\3039\025\246.\270I/f\272N\202\21677\027^:m\310\3059X\371\357\271:e\370\271P\036\316\2707Mw\272\235;\216:Sy\221\271\312,P:\353\222\2468J&$:)\350]\271\025\324W:Y\301\2148\207\246I\272s\036\2269\256\201\375\271\267\307s\271\340W\3429\301X\217:\333\377%:\235\373~:6\252\2159\237\226\036\272\230F\375\271\224\342Q\272\177\354\003:\316\314\314\271I\316\311\272\352.\255\271\226\300\202\272\262(\247\271\005T\003:oH\301\271\206H\2358\177\271\3149\334\020\200\267\213\010\2648<\251r9\246O#:\270wZ:g\226\272\272\301n\0109L\274V\272\242\350\000:a\342;9\366\004\032\272&/\010:t=\2679oj\014:\352r\002\272s\346\3618$\\A\272\025\365\004:{\221!\272\352\363\223\272-\322\0239fo\014:\312\243\022:\343\025\003\272\32726\272r\256%\271i\332\027:m\'L8^\373\0019\375t\024\271\237\372\2478\206S\3539\212uS\272\205\242w\272\341\035\3309+\020\247:\315i\3349\322\366T8\313(\2259\250\2346\272\177\267\3229\334\272^\272\211\264\353\271\200-\033\270\361\\F\272\376ZG\272b\320n\272iX\2329\200\1775\272\337\266\2378\365N\200\271\217 K\272O\226\242\270\366\n\316\270\361`\3437\324\344\n\272\303`]:}\216\025:)SE9;\341\315:\364\362\221\270%t>:\226.0:\031\266B\270I*\3209m\003P\271l\226\2729j\360\277\272\303\213\0079v\201\267\272\014\377\27593\267\3459\333\250g\272\225A\3059iq\203:\216\257^\272.\t\026:\203\204\2056\306\312\2559\250\230\274\271g]\001:\236=0:\004i\037:]\270a:j\260\"\272\037\242:\271\373\315\3077h\367\207:\004\000\022:\366W\222\271H\027\314\271\003<\250\271\345\262\213\272b\250\2619\352\"K\271v\024\2179\351\022h:K\261\003\271\3401=\272\267\322\243:\327|=\272x\274r\272H\322\240:\205\313\260\271\023\306\3679\222\372\231\272\177\230z9\324\254\013\272\021\032\370\270;L\024:q\3228\272LDq\271l\240\010:1Q\005\272\230g\3359\221\207\0379\0272\0319\036\270\2567\225K\031:]\325\377:\375\203\002\271*\324\3629\201%\347\271\330MQ\272_\326\214\270\371|\034\272T\364\2179-7\272\272\347\322Y\272\345Q\271\270nb`\271\273\036\34090\335\'9\236\206\0319{\246I\272\327\303;9g\220,\272\002v&:\346\\@\272\333O\322\2676\035_:X\013\3158\314\223\2647\021+0:\"\377G:\330\337D8o\274\214:\356\304Q:\331g\3629\320\205\006\272\363\314\3509*\376N\272c\247\215\272PA\026\272\330\240=\272%b\366\271q^N:R\260\3219\243k\234:B\227Z:\223\013!\271?\330}9\206\333z6I\360):0@\025:\231\030\n\271`\223\267\271\201 d\271 \030\377:\253\241+\272q9T:Zl+\272\033];\270\365(\210\271Z\372,\271H_\201\272\027i3\271\353\203\274\271\250\340p\272\373\371@:Wrg6\303V\2369wl\r:Cko\271(yo\272\264j\230:\225#V\272\242\262\017\272O\356\2608\327\177R\270\357\'\275\271\n~8\2723\310\256\271/\242\3429*\312\206:D\257s\271\236\334\345\270^\211\3309F\200D\267UH{\271\001y\003\271\022\313U\270\257\\,:B\0314\271\263\366\232:\315\'\231:Wl\0029\272\227\315\271\270\333\250\271L\332\0149\3074\267\271\236\277\001:$\355\222:\211\321\035:\322r\2709\212/~8\304R\260\267\304\003\244\271\027\247\013\270\344)\314\271vsR\272\302\324\2678\002\345\003:\353l\253\2727\320P8EB\202:\300w\0309\026* 7U\307\"\272\305\210\001\271y\333\3219\371\213\20088b_\271\323\302\2218\207\331\235:g\2019\272\206Z!\272C\311\3629\313#\2658\021\234:\271\307\265\000:\347wu:\362V(\271\274\226\256\271/s\245\271\230h;9V\360\2169K\250k9\230?\216\271\201|\2209\367\3412\272\005\250\0019\243\022\371\271)\275y:\376\240\3179\"\334\2278\336$\035\271/\236\335\271\250\332\3569\000\252T:^\205M\272\200\014I\272\031vK\272\026\254\3019t\014(\272\371z\002:y\275\2749\3239,\272\316\264\342\271;\367o\272I\007\2678\257\231\3179\2449\014\273;\203\035\271\215\016V8{\363\002\272]NC:\354\333\3239\3725/:.u\230\271\275\370\3638K~\357\271\331L\231:\230\231\2449|2a:V\225\264\270\227\327\2609\363\360\232\272\322\265\207\272M76:\257\022\n\272\263cY\272\216\270\1778Z)5\272\304\352\':\374\273b:\013\315)\272\354\346\2009\362X\200:,X\347\270\220\360\3219w\3603\270QL|\271\"2\262\271\177\302\214\270`\265\0048\3405-\271V/D95\3403:\270\363\253\272\335 \021\272\312eL:H\253&:J\374\367:$qX\270\263Mw9\026\000\324\270vy\3119\376\'\233\271_\'\222\272=\377y\270w\341\0379\254\253\3739\236\274\361\271\225\3429\267\352wl:\241\025\037\271\310\324Z:\220\223I:\343\303<\272\256\376\327\271j~\24499\204\261\271F\321\342\270F\020X9.sW\272g5\030\272\243UC:!F\211\272\334S\033:\006\nn:\3561\037\272&WC\272\327\260 \271\247\300\333\272\002\355g:\027k\252\272:\352\336\271\307\255t9IO]\272O\233U9\236\247\2178)\000\205:\005{\017\271\247\324\n:\006\234s9\253\354\260\270\263+b\271\2038<\272\0045m\265/3l9l\244\213:\326\213\357\271\2374o\272\272\307\363\271\276R5:~\337\026\271,\323\310\271\037\244\253\271*7\3339\205\002\n\270\265\254j9\320\306\2278y\3234\272\006\217\3108\001\322\"\272\315\310\243\272\357t\247:\260\370\2216N>\037\271\272/\363\271\036+\200\271RKv:`\272\2318\276\351(:v\364\031:f\341a\271\315\275\002\272\177\244\000:2\242\2427\232\313\005:\020o\034\272!bB9|\254\013\271,Z\0349o\tJ:PRP:,\240}\272\346\nu8\341\330I\272=9\201\271\265\222W7\342\353`\271\212Af\272\177\347\022:\177\340\265\271y\262Z\272S/\013\272\260=\247\271\177\272F:\217\353\n:\366\017?\272\3358\216\271\202\210\317\272F\372f:u\257\3529\270@\222\2715n\2429\247\314\022\271i\211<9\357>\2649FZ\23693~\232\271\313;\304\271\255\310\014\272\253n\2419\177\r\0278\\~\3739\215\027\0309Rwa7V)k9\351\"\010\271\371\233%:v\223\354\271;\300$\272\336\024\231:\270\342\017:\350S~\271\265\013I\271`\017\303\2717\244\"\271@f\0228\243/\027:iU\300\271,<\305\267\371\306\013\272\305\326\037\272%#\375\271\\f\2679\2641_9C\230\363\271\234\353\245\271\345\251\204\271\307\273\2659=Pj8/\346V:\226K_\272d\351#:b^\236\271\370tB\272\277\3745:\345\214Y:\232\372\3429}ur\272\240\376\022\272\007\017\":\215\372\3429AC\014\271Ef\322\271x\347\0109^\271\1778\032Q\3069\311\203?\271R\"\017:\372\331V\272\337)L\272CP0\271\206J\3217\031A\217:\354\025\2509\203p\3128\243\237\023\272\332V\311:\261p}9\366\270\314\2707\264`\272%\t\243\267\357_\3159\342]\327\271*\373\374\272\223b\354\267#4\2747\345}\2579\231H\320\272\372\242[9`Tu\272P\210\355\271?\251::\257\027\0379\026T\253:\323y\001:`\036\256\271\227\332\2109l\225\3479*\203\2679Mn\217\271+<\3249\024\212\307\272]\230\252:\356\nj:\r\362a\270Gw\004:J\265\255\271\326N\033:\374q\2279\211\010\016\272\351\205\3549V\377N\2719\365\303\272F\223\306\271\256\351w9sz\371\2716\306\211:\255\2146:\256-\':4\021\235:\246O 9\200-\3479\3238\3318\371\000\340\271)\233\376\266=\300U:\031\205\3208\355\316\254\272m\342\216:\274\3719:%\243\010\272\360\027K:_\231`\272\314\006\225\272\300\376\2739\226\233\371\266\241\314\205:\030\212\315\271\030\231d:\"Y\023:\223\313s9\311\341\270\271\361\325\005\272(\367\315\271\273\246q:5\371\266\271\014A\032:)u\000\272\313\243\3418/\353V:\254@\343\271 \327\261\270\037\375\r::_\3439mE7:\020\305^\272\254\277\337\272p@x\272\365q\200:k\325,9\244\224\003:Xv\237\272\001\240\035\272 \363\210:L\242\320\271`\037\3459\232\177\036\272\267\377\2749\337\241\3549\273\374\016\272V\3171\271\307{\2459\003H89\336\256\215\272L\222i:\202x\206:\324\014\0359\211\205>9\025\2402\271\376#f\272\225\325\236\272\331\314\020:\312\025\234\271\235\267\211\272\317\273\3457\374\262\007\272\245\346\371\270\226\232\000\272\355\373Z\272\331\321.\272!\205z8a\261i9\326\236\360\272\306\345\020:\300\220@9\266\343\2268c\257 :\307&\202:4\324\3579n\034+\272:C\026\272@\026G9\204w\377\271\322\264\t\272\336\337\017\272\260b\2129\017H_:AG\2649\035\020A9\306f\234\271\352\331@:\254B\253\271Z|\3629$\",9\207<\022:\001\004\007:\262\025{\272kK\"9?\310\2618Sx\336\272y\371\2049gE\016:\321\031\3019\t\335\2708\016\363\3469*\3265\272\321BG:\\-\224\271\357\330\022\272\306\257\246\271\265\3723:\010-\240:h\302A\272T #9\r\021\2569\342\351\210\272\364V\021:\255$\233:t\355P:\310\233\252\271Bw\2729J\013\300\272g\220\006\271z\031\':\234V\217\270|\032\037:\254k\34497\214W\272g4\213:\nP?\272\265\232x\272\334\207(8\204\332\206\272\310\031\"\272Wz2:e\305\370\271Q]\233\272\347\325i:N\242\276:tL\233\271\326\036\215:\204\273x9n1\2757\201\301\3539\257\273\2579\343\305\242\271\214#>9\342\026\2247\260\316\2648V\351\215:\356\\\221:\021?#:~|]::\343L\271\356\024\031:\232\306\250\270\274Y*9\351\311/\271;N\004\272?\034&9wa\2737\370\373\2329\336\342%\272\315Uz8)3\3258\006fF:\037\256\333:\313\273\233\272\373\277\2519\250\035\r:\346WI9o1\375\271[\223\325\271Xa\235\271|\031\3669\211\232;9R\245\2659\243\263\223\271\'e\3527\237Z\307\267\225\211Q:\263\261\350\2709\022$9\261\312\013\272\244>:\272\300\\:\272\030\325\335\271>\223\243\272\3576\005:\027c\2409z$\0219\320\305\2009\354m\222\271*R\274\271/\362\354\2701W[:\021&\271:\336\217\021\267\030~\2569\371nD9\340\260\257:\261n*:\265\234x9h\262\034:\235h\222\271\342\340\234\2721\337\215:O\355\001\272\303\223\025\272a\347<\272\217\313T\272\005\004s\271\204\224\025:\247\001o\2718\225\252\272\002#\246\271\352\277\036\272\204U\224\272\265\336\010:q\355\322\271\370\312*:P\303x\267xE4\272\375\t,\272\223\025Y:T\221\231:\025\223t\272\347\n\021\272\334\324B:\267 M\272*\035\352\271n\0043\272Vt{\271.\032\214\271!\266m:\370c]\271p6\036\272K\232f9MC>:\331*6:Nr\2359\007\346\201:q\315\201\272\313!A\271\204\242\236\272>\235\224:\361\327\0349\017\207\360\271\265>\0349l\221\004\272&\352\006\271\321\3442\2712C=\272\202U,:\\6\212\272\3515G:\033\t\267\270\037\276\327\271\233?%\271\337\240\0049\356{V9NH\200\271\322\025N:f\354\366:JSC9h\313\023\272ua\032\270\2374\023\272\326\373\2679\210\020\300\271\320r::\356\224k8\2339V:|\245\224\271\2759p:\203\374\007:`\366\3269\307\315I\270p>\3259\253\3127\272\353\352\013\272v\2638\272\010\234;:\316e\t:Z\312\031\272\215&\203:\352\352\265\271\014\235]\272\357WN\271\201jg\272B\253F\272m\205Q\267\264[\2729\275\270\3379~?r9\225{\3377\355n\33798\006n\272\256\271\3679\2357<:S&A9M\014P:\206\001\366\271\272\200\202:\203\223\21693}7:1/\261\271\237\374V:\035X\252\270\376}\2559:\217\2309\017c\320\271^\025_\271\246\t\372\271\007\242@\272Er4\272\255\017\'9y=\224:t\005\247\271\234(\0179\304Ha\272\376=`:\352V\254\270C\256\332\267\220\030\2659\321\3221:_\237s:\223\244\013\272\237\006F9\'z\001\272T\017\314:\3751)\272\316\314\320\270\240.\2279\235t\261\270qaM\270au\"\272\316\352\202:\217@\304\270\343&\010:\273q\2649N\"\232\27170\201\2729O\21181\276\2019\200\037\3349\371^\2029\0363\':\332CL:\200p$:m\212|\271\252\347\026\272\220\302\234\271\\\265\2719xA\3538\373-\003\272u3\302\271MB\214\272Y\241&\272F\210\024\272i%2\272\266k\227\271\271!I:\302\364\303\271\267L\250\271\304\265\020\272M&\036:\362o\242\271HA\240\272\010/+7i\0351\272Q\024\262\271\264\334\223\271\025\362\253\271\232\366D:]\345J:B\213?\272\264\222:\272F\r=9\313q\236:j\016N\272\205\035\256\271\361d\2378}\320&\271\334!\3719\000su\272>\245\245:]\016\'\272\356\270\n\270\310X\2138\232M~:\240U{\272\262(\004:$\245\3008\266\214o:\341\343\n\271/\277\255\267`\017\0209x\342\3628G\25489\002\260\005\272\217,\"\270Z\325\237\270\301\260E:\257\007\304:`TD\267\310\361-:\252\262\0219\265\365\261\272O\354\306\266Gt\2769i\'.9n:\215\271\306\033\0137 \365\206\271\315\205\2409\346*):\031]|:\340\006\3359om*:w \203\270\367>\010\271\347u\2639u\353|9\\\3259\272\306\353\316\270j\266\t:\350m\3729?$\024\271pLs\272\025/R\272\346E?8#-\0239\337u\2308\316`\325\271tH[\2729\340\2679\003[4\272qm>\271\225C\r:Q\315]\270\030 P8ep>:\225\320\2369\357\260\003\272W\2159\272 x*:\357\242\0259\321\304\266\271\024\205\2259\343Zw\272\320\234e9\233\272\033\272\331\013\322\272\341;I:&!\264\271\270{\3019@\301l:f6\3649\266\371\0079\335T\346\270\364\327\252\270\321B8\270\037\375\3748\2444\024:o\340\3628\356\325\2458\031\250o:\365\177M\271\341\264\215:3\363*9\177\367&\272\372(\302:i\226\2229n\031\264\271\314@g:8\276\":\353g\2279\310SH\272\367\273\3108g;\363\272\2046,:\372\367D9\033>@\272\3476U:x\271S\271s\342\202:\216\314U:n\';:I\212\016\272\n\005\326\271\345\017k9\277A\002:\360\222\030:q\226q:\344m\323\270\350\330\374\271\237\244\3109GZ\000:\014w<\271\010\216\227\271\304\321\372\267\022\217~9\226zT:\262\265o\272%QN\271\354\261t:\212\277\232\272Hj\0109\231*\017\271c\364q\272]q\37394\214(9\013\363A:\263\"\2379\322p \272\321\251w9\374A\0379o\027\2029\241\026\3419\000x\344\270\245\026\342\271\024\270\2249\010\251\377\272eFN\270\240\032\264:v\230H:\333\320\3158\374\275\030:\230\371>\272\263\225\037\273\0264\221\270\361\303u\271\220\2748\272\335.\3519_\244\023\272\357$::\241\251\2519l\365\0039\212\373\027\272\364\037\3319\200\350Q9v\332\365\271\241\351&:!\263\027\2728E\3539\007\346\016:\350\347\2449m\214G:\243G\246\270@\307H\272Y\205\315\270\030\270\370\266\027=\301\270\343\200\023:3\320\3259\367\236\2079\334\374o\272\275\nt:\031\246D:\226\032\2049\352Q\207\271\274\370\020\272\253M\3017\217\337\331\270h\233\030:\341;\233\270\210D\027:\022v<\272\263/\213\271[\210\252\271\210Z2\272\tL\017:\372L\336\271\361\000\3329\372\032\022\272\004h!:\335\353\276\271?\357o7\244\274+:!\034\325\272_\345\301\271\366\014c\2715\010{:\324D\031\271\304\332\":J\034\327:\214\362f\272O\266\2339\'\230B\272\340\257+:\235\213a9\270(\221\271%\235\036:6\340\317\271/\275*\272\0337\2339\271\335\206:8Q`9\225\002}9\n\250\0349\373\")\272\377i\215\271o\026\2329!(.:\253=\363\270\2669\267:Y*\026:\016\243p\271\334\201*:h0\257\271\\\344\000:\265\265I8\365\'\0169N)\232\270\374\271\014:\1779\2109hy/\272\340\256,\271wk\215\271\206\240\0178\\y}\270\241Xe9Y\033\261\271l\035I\272\277\212\3748\010\310\304\271b;\234\271hI\245:U\320\003\272\006D\2369,kP9/\007\231:\242S\"9\210\257\3509\314\005\3728\014.\3449\334\355\0109\350\211\0058\340\242#\272\254,\2629\352k\366\271\\\017\272:\024q\002\272\033\354\017\272\320\201\377\270\215\014\315\271#\031\3358\247\2617\272q-\2259\245R.8Z\226\301\271L3\252\271\037 \313:\336\227\2159s\237\303\271Q\3215:\270*F\271\253\250\202\271U\237/\271{J\242\270\211Z\0309\336\262\263\271jL\2729@\304\204\271i\366\264:C,\213\272={\2748\005\204^\272C\0352:\240\326\202:\373\033O\271\032$S:\0016\226:\311\273\027\2726\033\222\272\332w\005\272\262\216\225\2720XH9;\302\0019\375R\3049\007/1\270\036,\3229\003\312\263\272\257\226\013\272_YW:\340F\2639\306\373\t\272\306k\006\271\216\201\033:\314\337\240\270m\241\3409\335\336\326\270A\211\276\2704\323\000\272;\331\211:\374\272\344\271=\211\3779\351\272\006\272\314\211`9b*c8\033*|\272\241NY\265\352\256.\272z\276\253\270\231fT9\220\214,9\353\247\025\272q4\315\271\325\360\034\272\312r\3759\3754\243:j\247C\272\333\'\227:fz\3768\\;?\272I\255\245\272$\031\311\2720\271\2128\010< \272\036\034\333\271\274F\001:\030S\2158\020q\0047Bf]9\254\246\023:\370\255\2649\\d\2319\352\031\033\272\261\375\3328?\316\235:\236\3430:\000\025 :\325\007I99>)\272\216)\0219\223\257S\271\321O\237\272#\354\260\270\242\355\3259\001\211W:\311\273?:\037\342W\272\355\013\247:\312h\247\271\233\340\235\271Q\241=\270\370\254b9b\256\025:\267\307\345\271C\267_\272\204\3007:\026\214\021:}\021\3068\256<\032\272\270\036\t\272\231\321\3028\322@D\270o\237<:v\267\352\2715\325\3659\304\n\3227\tz!:\016\213\33792U)9\267\311\221:u\345\346\271\264)\027\272\005c\2329\'\360\027:"
      }
    }
  }
}
node {
  name: "local/dense/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/dense/kernel/Assign"
  op: "Assign"
  input: "local/dense/kernel"
  input: "local/dense/kernel/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/dense/kernel/read"
  op: "Identity"
  input: "local/dense/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "local/dense/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/dense/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/dense/bias/Assign"
  op: "Assign"
  input: "local/dense/bias"
  input: "local/dense/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/dense/bias/read"
  op: "Identity"
  input: "local/dense/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "local/dense/MatMul"
  op: "MatMul"
  input: "local/Reshape_3"
  input: "local/dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/dense/BiasAdd"
  op: "BiasAdd"
  input: "local/dense/MatMul"
  input: "local/dense/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/dense_1/kernel/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        tensor_content: "o?\356=\3150\212=\300\255\232=WP&>(Hq\275\024\272\206\275\314_\262<\347^L\275z\242\252=aY\216\275\t\334\356<m\222\217=S\347@<F\232R\275!%\201\274\336\202\364<a\002\364<W\350\336\275\033\\\306;\230\324y<\364\357S;\005\223+>3\005(<5\242\205\275\233\275I;\360\256`\275Xc\254\275\274\006\016=\372\004/\275p{\363\273\277\200\374\275\241VZ=fI\000\275\301P\203\275#3\211<\002\332\033\274U\362h=\353\355\246\275pu\315<$\224\213=\016\017\262\274\017\r\230\275\026\227\315\274$\305u\274\001\362\227\274\311\247\277<\261\001i\275\'\226\005<\370d\224<\022\222P=Q-d=!\270\020\276\352\320\230\275\026\013\224\275\272\302\020\275h\314\005\275\002\204R;\221\304L\275J\024D\274\306\332\355\275vb#=\3677\317=/\337\355\275\317R\261=\353\327\006<\355x\235\274\000\373q=J\235_\275sL\250\274\373\220\210\274l\230v\275\273\246y=\224\345*:Q\347,\275C+\313<\321V\231\275 \266\207\275\274\035\245=\345\335n\275\310\035\311\274\014,\200\275C\345O<K\002\025\2743\006\026=%\222C=C\014\317\275\215\346\340\274\241\300\027\276\240a\307\274\177\366\315<b\3100\275\256I\266<K\346\251\275\227\321\335:\035\324X\273\241\200\314\275\230\356(>b\236\247\275f\207\224\275\024f\033>\007\326\236<\033\242\271<7N\216\275\227\213\002>\337\310\203\273\323n)<\352#:=9\326\312\275V{\320<\313\337\002\272\207\245\262=:\262\026\2759=\254\275C;\324;\031X\343=\'\226(=\027s\324<\245_\264=\362j\330\274a\246\352\275w\251\261<\225Q\322\274^p\210\275N\000L=\224\2476=\t\266\204\274\3616l\274~&4\275\237\3165\275.\360m;\242\302\224<\010j\256<\027\227\210\275\253\234a=JY\373=\005/\231=\016\026\366\274D\334\366<\212\013)\275\264v0=I\267\326\274\023*P\274xa\203\275%\255D=\317\321\r=<.b=\003\211W\275\021\360\377<\023\277\265<\023\3614\276\270u\373\275\233\221\257\275\302+\236\275^,\235\275d|\361\273$v\232=8\024\210=\310\240\334;#\312\240\275\222\035\255=\2222J;\265\330\023=n\226!\275[\321T\274\254 \362<)\337~<7\311\206\275\3460\267=\250K\235=\320\014x<\255\245$=\273Ns\275\017\272\362\2758\370\240=\370G\241\275\207E\242=\343\300\363\274\"\254\330\271lY:\275\024\016}<kC\263\275\201v\253=U\2470<\327\367s\275\276\231h\273l\374\321<\\\271\004\276\350;$\275\3115\227=LL4\274\331r\005\275\006\020\234<\350\204g\2741\244\256;\265 P\275F\311\203=i\270-\275\023\324\001=\236AJ\275\351\350\002\274\207D`=\351\257I\275\303\227\206\275\200UU\275\225\005\023\275\313\214\327<\251\3576\275\342.k\274A\242\177\2739\324\177;\264\210\311\274`K\202\275\014\345\247=\354\2156\275\177J\313\275#=M\275\325\211\034\275\214\231n\275\333\250\'\273\375;\236\271Q\315S\275\257+\234\275\336\237\264=\036\204\230\275\332\230\016\276\"hA\275\337\345\261<Z\362\324\274$ U=#\030\214\275\350\037(=\211\231L\275\224\037\001=\3554!=f\020\335<\020\323+\275\014\332\271;\202\214\211==)\255\274[e\036;S\333\201\274^9\260<\350\254\206\275&\342\215\275\341\212\307:$\316\363\275\361\035\314;\t\360\227=~\"L=v\346v\274\363\265\355\275\261\232\204<\016\307\276<\021\352:=\370\227D>\"\243\222<"
      }
    }
  }
}
node {
  name: "local/dense_1/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/dense_1/kernel/Assign"
  op: "Assign"
  input: "local/dense_1/kernel"
  input: "local/dense_1/kernel/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/dense_1/kernel/read"
  op: "Identity"
  input: "local/dense_1/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/dense_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/dense_1/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "local/dense_1/bias/Assign"
  op: "Assign"
  input: "local/dense_1/bias"
  input: "local/dense_1/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "local/dense_1/bias/read"
  op: "Identity"
  input: "local/dense_1/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "local/dense_2/MatMul"
  op: "MatMul"
  input: "local/Reshape_3"
  input: "local/dense_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "local/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "local/dense_2/MatMul"
  input: "local/dense_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "local/Reshape_4/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "local/Reshape_4"
  op: "Reshape"
  input: "local/dense_2/BiasAdd"
  input: "local/Reshape_4/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_1"
  op: "StridedSlice"
  input: "local/rnn/while/Exit_2"
  input: "local/strided_slice_1/stack"
  input: "local/strided_slice_1/stack_1"
  input: "local/strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/strided_slice_2/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_2/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_2/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_2"
  op: "StridedSlice"
  input: "local/rnn/while/Exit_3"
  input: "local/strided_slice_2/stack"
  input: "local/strided_slice_2/stack_1"
  input: "local/strided_slice_2/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Max/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/Max"
  op: "Max"
  input: "local/dense/BiasAdd"
  input: "local/Max/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "local/sub"
  op: "Sub"
  input: "local/dense/BiasAdd"
  input: "local/Max"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "local/multinomial/Multinomial/num_samples"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "local/multinomial/Multinomial"
  op: "Multinomial"
  input: "local/sub"
  input: "local/multinomial/Multinomial/num_samples"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "local/Squeeze"
  op: "Squeeze"
  input: "local/multinomial/Multinomial"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "local/one_hot/on_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "local/one_hot/off_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "local/one_hot/depth"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "local/one_hot"
  op: "OneHot"
  input: "local/Squeeze"
  input: "local/one_hot/depth"
  input: "local/one_hot/on_value"
  input: "local/one_hot/off_value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "local/strided_slice_3/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_3/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_3/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "local/strided_slice_3"
  op: "StridedSlice"
  input: "local/one_hot"
  input: "local/strided_slice_3/stack"
  input: "local/strided_slice_3/stack_1"
  input: "local/strided_slice_3/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "x"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "y_"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\001\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09231861680746078
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09231861680746078
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d/kernel/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d/kernel/Initializer/random_uniform/max"
  input: "conv2d/kernel/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d/kernel/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d/kernel/Initializer/random_uniform/mul"
  input: "conv2d/kernel/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/kernel/Assign"
  op: "Assign"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/kernel/read"
  op: "Identity"
  input: "conv2d/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/bias/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/bias/Assign"
  op: "Assign"
  input: "conv2d/bias"
  input: "conv2d/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/bias/read"
  op: "Identity"
  input: "conv2d/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/convolution/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\001\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/convolution/dilation_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/convolution"
  op: "Conv2D"
  input: "x"
  input: "conv2d/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
          dim {
            size: 49
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/BiasAdd"
  op: "BiasAdd"
  input: "conv2d/convolution"
  input: "conv2d/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
          dim {
            size: 49
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "average_pooling2d/AvgPool"
  op: "AvgPool"
  input: "conv2d/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 10
        i: 10
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 5
        i: 5
        i: 1
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\220\001\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "average_pooling2d/AvgPool"
  input: "Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\220\001\000\000\005\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.12171612679958344
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12171612679958344
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "Reshape"
  input: "dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "softmax"
  op: "Softmax"
  input: "dense/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Log"
  op: "Log"
  input: "softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "y_"
  input: "Log"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul"
  input: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg"
  op: "Neg"
  input: "Sum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/Neg_grad/Neg"
  input: "gradients/Sum_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Shape"
  op: "Shape"
  input: "mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Shape"
  input: "y_"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "Log"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/mul"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "Log"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/mul_1"
  op: "Mul"
  input: "y_"
  input: "gradients/Sum_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Reshape"
  input: "^gradients/mul_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Reshape_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "softmax"
  input: "^gradients/mul_grad/tuple/control_dependency_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Log_grad/mul"
  op: "Mul"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "gradients/Log_grad/Reciprocal"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_grad/mul"
  op: "Mul"
  input: "gradients/Log_grad/mul"
  input: "softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_grad/mul"
  input: "gradients/softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_grad/Sum"
  input: "gradients/softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_grad/sub"
  op: "Sub"
  input: "gradients/Log_grad/mul"
  input: "gradients/softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_grad/sub"
  input: "softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_grad/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_grad/mul_1"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_grad/mul_1"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul_1"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "average_pooling2d/AvgPool"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/Reshape_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/average_pooling2d/AvgPool_grad/Shape"
  op: "Shape"
  input: "conv2d/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/average_pooling2d/AvgPool_grad/Shape"
  input: "gradients/Reshape_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
          dim {
            size: 49
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 10
        i: 10
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 5
        i: 5
        i: 1
      }
    }
  }
}
node {
  name: "gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/conv2d/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  input: "^gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "gradients/conv2d/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  input: "^gradients/conv2d/BiasAdd_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
          dim {
            size: 49
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/conv2d/BiasAdd_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d/convolution_grad/Shape"
  op: "Shape"
  input: "x"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d/convolution_grad/Shape"
  input: "conv2d/kernel/read"
  input: "gradients/conv2d/BiasAdd_grad/tuple/control_dependency"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\001\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "x"
  input: "gradients/conv2d/convolution_grad/Shape_1"
  input: "gradients/conv2d/BiasAdd_grad/tuple/control_dependency"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d/convolution_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv2d/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "gradients/conv2d/convolution_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d/convolution_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d/convolution_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d/convolution_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d/convolution_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d/convolution_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d/convolution_grad/tuple/group_deps"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/kernel/Adam"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv2d/kernel/Adam"
  input: "conv2d/kernel/Adam/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/kernel/Adam/read"
  op: "Identity"
  input: "conv2d/kernel/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv2d/kernel/Adam_1"
  input: "conv2d/kernel/Adam_1/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv2d/kernel/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/bias/Adam"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/bias/Adam/Assign"
  op: "Assign"
  input: "conv2d/bias/Adam"
  input: "conv2d/bias/Adam/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/bias/Adam/read"
  op: "Identity"
  input: "conv2d/bias/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/bias/Adam_1"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/bias/Adam_1/Assign"
  op: "Assign"
  input: "conv2d/bias/Adam_1"
  input: "conv2d/bias/Adam_1/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/bias/Adam_1/read"
  op: "Identity"
  input: "conv2d/bias/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam/read"
  op: "Identity"
  input: "dense/kernel/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam_1/read"
  op: "Identity"
  input: "dense/kernel/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam/Assign"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam/read"
  op: "Identity"
  input: "dense/bias/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Adam_1"
  op: "VariableV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "dense/bias/Adam_1/Initializer/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Adam_1/read"
  op: "Identity"
  input: "dense/bias/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_conv2d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Adam"
  input: "conv2d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv2d/convolution_grad/tuple/control_dependency_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv2d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2d/bias"
  input: "conv2d/bias/Adam"
  input: "conv2d/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv2d/BiasAdd_grad/tuple/control_dependency_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_conv2d/kernel/ApplyAdam"
  input: "^Adam/update_conv2d/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_conv2d/kernel/ApplyAdam"
  input: "^Adam/update_conv2d/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/update_conv2d/kernel/ApplyAdam"
  input: "^Adam/update_conv2d/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/update_dense/bias/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "softmax"
  input: "ArgMax/dimension"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "y_"
  input: "ArgMax_1/dimension"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/bias/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^conv2d/kernel/Adam/Assign"
  input: "^conv2d/kernel/Adam_1/Assign"
  input: "^conv2d/bias/Adam/Assign"
  input: "^conv2d/bias/Adam_1/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Neg_grad/Neg"
  op: "Neg"
  input: "gradients_1/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/Neg_grad/Neg"
  input: "gradients_1/Sum_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Sum_grad/Shape"
  op: "Shape"
  input: "mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/Sum_grad/Reshape"
  input: "gradients_1/Sum_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_grad/Shape"
  op: "Shape"
  input: "y_"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_grad/Shape_1"
  op: "Shape"
  input: "Log"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/mul_grad/Shape"
  input: "gradients_1/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/Sum_grad/Tile"
  input: "Log"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/mul_grad/mul"
  input: "gradients_1/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/mul_grad/Sum"
  input: "gradients_1/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_grad/mul_1"
  op: "Mul"
  input: "y_"
  input: "gradients_1/Sum_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/mul_grad/mul_1"
  input: "gradients_1/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/mul_grad/Sum_1"
  input: "gradients_1/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "softmax"
  input: "^gradients_1/mul_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Log_grad/mul"
  op: "Mul"
  input: "gradients_1/mul_grad/Reshape_1"
  input: "gradients_1/Log_grad/Reciprocal"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/softmax_grad/mul"
  op: "Mul"
  input: "gradients_1/Log_grad/mul"
  input: "softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/softmax_grad/Sum"
  op: "Sum"
  input: "gradients_1/softmax_grad/mul"
  input: "gradients_1/softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/softmax_grad/Sum"
  input: "gradients_1/softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/softmax_grad/sub"
  op: "Sub"
  input: "gradients_1/Log_grad/mul"
  input: "gradients_1/softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/softmax_grad/mul_1"
  op: "Mul"
  input: "gradients_1/softmax_grad/sub"
  input: "softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/softmax_grad/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/softmax_grad/mul_1"
  input: "dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape"
  input: "gradients_1/softmax_grad/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/Reshape_grad/Shape"
  op: "Shape"
  input: "average_pooling2d/AvgPool"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dense/MatMul_grad/MatMul"
  input: "gradients_1/Reshape_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/average_pooling2d/AvgPool_grad/Shape"
  op: "Shape"
  input: "conv2d/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients_1/average_pooling2d/AvgPool_grad/Shape"
  input: "gradients_1/Reshape_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
          dim {
            size: 49
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 10
        i: 10
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 5
        i: 5
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/conv2d/convolution_grad/Shape"
  op: "Shape"
  input: "x"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/conv2d/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/conv2d/convolution_grad/Shape"
  input: "conv2d/kernel/read"
  input: "gradients_1/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/conv2d/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\001\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/conv2d/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "x"
  input: "gradients_1/conv2d/convolution_grad/Shape_1"
  input: "gradients_1/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Abs"
  op: "Abs"
  input: "gradients_1/conv2d/convolution_grad/Conv2DBackpropInput"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Neg"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "saliency/tag"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "saliency"
      }
    }
  }
}
node {
  name: "saliency"
  op: "ImageSummary"
  input: "saliency/tag"
  input: "Abs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "image/tag"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image"
      }
    }
  }
}
node {
  name: "image"
  op: "ImageSummary"
  input: "image/tag"
  input: "x"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "accuracy"
  input: "saliency"
  input: "image"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv2d/bias"
        string_val: "conv2d/bias/Adam"
        string_val: "conv2d/bias/Adam_1"
        string_val: "conv2d/kernel"
        string_val: "conv2d/kernel/Adam"
        string_val: "conv2d/kernel/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 14
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "conv2d/bias"
  input: "conv2d/bias/Adam"
  input: "conv2d/bias/Adam_1"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Adam"
  input: "conv2d/kernel/Adam_1"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv2d/bias"
  input: "save/RestoreV2_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv2d/bias/Adam"
  input: "save/RestoreV2_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv2d/bias/Adam_1"
  input: "save/RestoreV2_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv2d/kernel"
  input: "save/RestoreV2_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv2d/kernel/Adam"
  input: "save/RestoreV2_6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv2d/kernel/Adam_1"
  input: "save/RestoreV2_7"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2_8"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "save/RestoreV2_9"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "save/RestoreV2_10"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2_11"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "save/RestoreV2_12"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "save/RestoreV2_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "local/Pad/paddings"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "local/Pad"
  op: "Pad"
  input: "softmax"
  input: "local/Pad/paddings"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "ac"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "adv"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "r"
  op: "Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "LogSoftmax"
  op: "LogSoftmax"
  input: "local/dense/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Softmax"
  op: "Softmax"
  input: "local/dense/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "local/dense/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Rank_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "local/dense/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub"
  op: "Sub"
  input: "Rank_1"
  input: "Sub/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Slice/begin"
  op: "Pack"
  input: "Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Shape_1"
  input: "Slice/begin"
  input: "Slice/size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "concat/values_0"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "concat/values_0"
  input: "Slice"
  input: "concat/axis"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "local/dense/BiasAdd"
  input: "concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Rank_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Shape"
  input: "local/Pad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Sub_1/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_1"
  op: "Sub"
  input: "Rank_2"
  input: "Sub_1/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Slice_1/begin"
  op: "Pack"
  input: "Sub_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_1/size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Slice_1"
  op: "Slice"
  input: "Shape_2"
  input: "Slice_1/begin"
  input: "Slice_1/size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/values_0"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "concat_1/values_0"
  input: "Slice_1"
  input: "concat_1/axis"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "local/Pad"
  input: "concat_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SoftmaxCrossEntropyWithLogits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "Reshape_1"
  input: "Reshape_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Sub_2/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sub_2"
  op: "Sub"
  input: "Rank"
  input: "Sub_2/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Slice_2/begin"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Slice_2/size"
  op: "Pack"
  input: "Sub_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Slice_2"
  op: "Slice"
  input: "Shape"
  input: "Slice_2/begin"
  input: "Slice_2/size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "SoftmaxCrossEntropyWithLogits"
  input: "Slice_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "LogSoftmax"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul_1"
  input: "Sum_1/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "Sum_1"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "mul_2"
  input: "Const_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg_1"
  op: "Neg"
  input: "Sum_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "local/Reshape_4"
  input: "r"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "Square"
  input: "Const_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_3/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "mul_3/x"
  input: "Sum_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "Softmax"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_4"
  op: "Sum"
  input: "mul_4"
  input: "Const_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Neg_2"
  op: "Neg"
  input: "Sum_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Shape_3"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape_3"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "strided_slice"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_5/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "mul_5/x"
  input: "mul_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Neg_1"
  input: "mul_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_6/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "Neg_2"
  input: "mul_6/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "add"
  input: "mul_6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "sub_1"
  input: "Reshape_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill_1"
  op: "Fill"
  input: "gradients/Shape_1"
  input: "gradients/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients/local/rnn/while/Select_1_grad/zeros_like/StackPush"
  input: "^gradients/local/rnn/while/Select_1_grad/Select/StackPush"
  input: "^gradients/local/rnn/while/Select_2_grad/zeros_like/StackPush"
  input: "^gradients/local/rnn/while/Select_2_grad/Select/StackPush"
  input: "^gradients/local/rnn/while/Select_grad/Select/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Neg_1_grad/Neg"
  op: "Neg"
  input: "gradients/Fill_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Neg_1_grad/Neg"
  input: "gradients/Sum_2_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Shape"
  op: "Shape"
  input: "mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_2_grad/Reshape"
  input: "gradients/Sum_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape"
  op: "Shape"
  input: "Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/Shape_1"
  op: "Shape"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_2_grad/Shape"
  input: "gradients/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/Sum_2_grad/Tile"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/mul_2_grad/mul"
  input: "gradients/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum"
  input: "gradients/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/mul_1"
  op: "Mul"
  input: "Sum_1"
  input: "gradients/Sum_2_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_2_grad/mul_1"
  input: "gradients/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_2_grad/Sum_1"
  input: "gradients/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Shape"
  op: "Shape"
  input: "mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/add"
  op: "Add"
  input: "Sum_1/reduction_indices"
  input: "gradients/Sum_1_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients/Sum_1_grad/add"
  input: "gradients/Sum_1_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/range"
  op: "Range"
  input: "gradients/Sum_1_grad/range/start"
  input: "gradients/Sum_1_grad/Size"
  input: "gradients/Sum_1_grad/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Fill/value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients/Sum_1_grad/Shape_1"
  input: "gradients/Sum_1_grad/Fill/value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/Sum_1_grad/range"
  input: "gradients/Sum_1_grad/mod"
  input: "gradients/Sum_1_grad/Shape"
  input: "gradients/Sum_1_grad/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Maximum/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/Sum_1_grad/DynamicStitch"
  input: "gradients/Sum_1_grad/Maximum/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Sum_1_grad/Shape"
  input: "gradients/Sum_1_grad/Maximum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_2_grad/Reshape"
  input: "gradients/Sum_1_grad/DynamicStitch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_1_grad/Reshape"
  input: "gradients/Sum_1_grad/floordiv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape_1"
  op: "Shape"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_1_grad/Shape"
  input: "gradients/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/Sum_1_grad/Tile"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/mul"
  input: "gradients/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum"
  input: "gradients/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul_1"
  op: "Mul"
  input: "LogSoftmax"
  input: "gradients/Sum_1_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_1_grad/mul_1"
  input: "gradients/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum_1"
  input: "gradients/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/Exp"
  op: "Exp"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/Reshape"
  input: "gradients/LogSoftmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/mul"
  op: "Mul"
  input: "gradients/LogSoftmax_grad/Sum"
  input: "gradients/LogSoftmax_grad/Exp"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LogSoftmax_grad/sub"
  op: "Sub"
  input: "gradients/mul_1_grad/Reshape"
  input: "gradients/LogSoftmax_grad/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/LogSoftmax_grad/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/local/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/LogSoftmax_grad/sub"
  input: "local/dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_3"
  input: "gradients/LogSoftmax_grad/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/Reshape_3_grad/Shape"
  op: "Shape"
  input: "local/rnn/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/dense/MatMul_grad/MatMul"
  input: "gradients/local/Reshape_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/rnn/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/local/Reshape_3_grad/Reshape"
  input: "gradients/local/rnn/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/rnn/TensorArray"
  input: "local/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/rnn/while/Exit_1"
  input: "^gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/rnn/TensorArrayStack/range"
  input: "gradients/local/rnn/transpose_grad/transpose"
  input: "gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/local/rnn/while/Exit_1_grad/b_exit"
  input: "gradients/local/rnn/while/Switch_1_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/local/rnn/while/Exit_2_grad/b_exit"
  input: "gradients/local/rnn/while/Switch_2_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/local/rnn/while/Exit_3_grad/b_exit"
  input: "gradients/local/rnn/while/Switch_3_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/local/rnn/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/local/rnn/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/local/rnn/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/local/rnn/while/Merge_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/local/rnn/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/local/rnn/while/Merge_1_grad/Switch:1"
  input: "^gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "local/rnn/while/Identity"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  input: "^gradients/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "^gradients/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  input: "^gradients/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "^gradients/local/rnn/while/Select_grad/Select/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like/RefEnter"
  input: "local/rnn/while/Identity_2"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/Select_1_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual_1"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "gradients/local/rnn/while/Merge_2_grad/Switch:1"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like"
  input: "gradients/local/rnn/while/Merge_2_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like/RefEnter"
  input: "local/rnn/while/Identity_3"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/Select_2_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual_2"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "gradients/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "gradients/local/rnn/while/Merge_3_grad/Switch:1"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "gradients/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "gradients/local/rnn/while/Select_2_grad/zeros_like"
  input: "gradients/local/rnn/while/Merge_3_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/rnn/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients/local/rnn/while/Select_grad/zeros_like/Enter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/Select_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/Select_grad/Select/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select"
  op: "Select"
  input: "gradients/local/rnn/while/Select_grad/Select/StackPop"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients/local/rnn/while/Select_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients/local/rnn/while/Select_grad/Select/StackPop"
  input: "gradients/local/rnn/while/Select_grad/zeros_like"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/local/rnn/while/Select/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/local/rnn/while/Select/Enter_grad/b_acc_1"
  input: "gradients/local/rnn/while/Select/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/local/rnn/while/Select/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/Add"
  op: "Add"
  input: "gradients/local/rnn/while/Select/Enter_grad/Switch:1"
  input: "gradients/local/rnn/while/Select_grad/Select"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/local/rnn/while/Select/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Select/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/local/rnn/while/Select/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/local/rnn/while/Select_2_grad/Select_1"
  input: "gradients/local/rnn/while/Select_grad/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/AddN"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "gradients/AddN"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/local/rnn/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/zeros_grad/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/local/rnn/while/Select/Enter_grad/b_acc_3"
  input: "gradients/local/rnn/zeros_grad/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/local/rnn/while/Select_1_grad/Select_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Sum_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Sum_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Tanh"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/local/rnn/while/Select_1_grad/Select"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Sum_1"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/split/split_dim"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/add_grad/Reshape"
  input: "gradients/local/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "local/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/split_grad/concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  input: "^gradients/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset:1"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/local/rnn/while/Select_2_grad/Select"
  input: "gradients/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/local/rnn/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/local/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/rnn/TensorArray_1"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/rnn/TensorArrayUnstack/range"
  input: "gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/local/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose_2/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/local/transpose_2_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/ExpandDims_2_grad/Shape"
  op: "Shape"
  input: "local/Reshape_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/ExpandDims_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/transpose_2_grad/transpose"
  input: "gradients/local/ExpandDims_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Reshape_2_grad/Shape"
  op: "Shape"
  input: "local/Sum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/ExpandDims_2_grad/Reshape"
  input: "gradients/local/Reshape_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Shape"
  op: "Shape"
  input: "local/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/add"
  op: "Add"
  input: "local/Sum/reduction_indices"
  input: "gradients/local/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/local/Sum_grad/add"
  input: "gradients/local/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/range"
  op: "Range"
  input: "gradients/local/Sum_grad/range/start"
  input: "gradients/local/Sum_grad/Size"
  input: "gradients/local/Sum_grad/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Fill/value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/local/Sum_grad/Shape_1"
  input: "gradients/local/Sum_grad/Fill/value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/local/Sum_grad/range"
  input: "gradients/local/Sum_grad/mod"
  input: "gradients/local/Sum_grad/Shape"
  input: "gradients/local/Sum_grad/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Maximum/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/local/Sum_grad/DynamicStitch"
  input: "gradients/local/Sum_grad/Maximum/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/local/Sum_grad/Shape"
  input: "gradients/local/Sum_grad/Maximum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/Reshape_2_grad/Reshape"
  input: "gradients/local/Sum_grad/DynamicStitch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/local/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/local/Sum_grad/Reshape"
  input: "gradients/local/Sum_grad/floordiv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/mul_grad/Shape"
  op: "Shape"
  input: "local/ExpandDims"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/mul_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\r\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/local/mul_grad/Shape"
  input: "gradients/local/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/mul_grad/mul"
  op: "Mul"
  input: "gradients/local/Sum_grad/Tile"
  input: "local/ExpandDims_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/mul_grad/Sum"
  op: "Sum"
  input: "gradients/local/mul_grad/mul"
  input: "gradients/local/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/mul_grad/Sum"
  input: "gradients/local/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/mul_grad/mul_1"
  op: "Mul"
  input: "local/ExpandDims"
  input: "gradients/local/Sum_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/local/mul_grad/mul_1"
  input: "gradients/local/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/local/mul_grad/Sum_1"
  input: "gradients/local/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/ExpandDims_grad/Shape"
  op: "Shape"
  input: "local/transpose_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/mul_grad/Reshape"
  input: "gradients/local/ExpandDims_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose_1/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/local/ExpandDims_grad/Reshape"
  input: "gradients/local/transpose_1_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Reshape_1_grad/Shape"
  op: "Shape"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/transpose_1_grad/transpose"
  input: "gradients/local/Reshape_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/local/Reshape_1_grad/Reshape"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/local/Softmax_grad/mul"
  input: "gradients/local/Softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/Softmax_grad/Sum"
  input: "gradients/local/Softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/local/Reshape_1_grad/Reshape"
  input: "gradients/local/Softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/local/Softmax_grad/sub"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/Reshape_grad/Shape"
  op: "Shape"
  input: "local/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/local/Softmax_grad/mul_1"
  input: "gradients/local/Reshape_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/local/Reshape_grad/Reshape"
  input: "gradients/local/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_4/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/transpose_grad/transpose"
  input: "local/conv2d_4/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/local/conv2d_4/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d_3/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/conv2d_4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/conv2d_4/convolution_grad/Shape"
  input: "local/conv2d_3/kernel/read"
  input: "gradients/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d_4/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d_3/Elu"
  input: "gradients/local/conv2d_4/convolution_grad/Shape_1"
  input: "gradients/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d_3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/conv2d_4/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d_3/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/local/conv2d_3/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d_2/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/conv2d_3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/conv2d_3/convolution_grad/Shape"
  input: "local/conv2d_2/kernel/read"
  input: "gradients/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d_3/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d_2/Elu"
  input: "gradients/local/conv2d_3/convolution_grad/Shape_1"
  input: "gradients/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d_2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/conv2d_3/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d_2/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/local/conv2d_2/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/conv2d_2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/conv2d_2/convolution_grad/Shape"
  input: "local/conv2d_1/kernel/read"
  input: "gradients/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d_2/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d/Elu"
  input: "gradients/local/conv2d_2/convolution_grad/Shape_1"
  input: "gradients/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/local/conv2d_2/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/local/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/local/conv2d/convolution_grad/Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/local/conv2d/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/local/conv2d/convolution_grad/Shape"
  input: "local/conv2d/kernel/read"
  input: "gradients/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/local/conv2d/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/local/conv2d/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Placeholder"
  input: "gradients/local/conv2d/convolution_grad/Shape_1"
  input: "gradients/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Abs_1"
  op: "Abs"
  input: "gradients/local/conv2d/convolution_grad/Conv2DBackpropInput"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill_1"
  op: "Fill"
  input: "gradients_1/Shape_1"
  input: "gradients_1/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/f_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/f_count_1"
  op: "Enter"
  input: "gradients_1/f_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/Merge"
  op: "Merge"
  input: "gradients_1/f_count_1"
  input: "gradients_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Switch"
  op: "Switch"
  input: "gradients_1/Merge"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Add/y"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/Add"
  op: "Add"
  input: "gradients_1/Switch:1"
  input: "gradients_1/Add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/NextIteration"
  op: "NextIteration"
  input: "gradients_1/Add"
  input: "^gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPush"
  input: "^gradients_1/local/rnn/while/Select_1_grad/Select/StackPush"
  input: "^gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPush"
  input: "^gradients_1/local/rnn/while/Select_2_grad/Select/StackPush"
  input: "^gradients_1/local/rnn/while/Select_grad/Select/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/f_count_2"
  op: "Exit"
  input: "gradients_1/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/b_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/b_count_1"
  op: "Enter"
  input: "gradients_1/f_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/Merge_1"
  op: "Merge"
  input: "gradients_1/b_count_1"
  input: "gradients_1/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients_1/b_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients_1/Merge_1"
  input: "gradients_1/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/b_count_2"
  op: "LoopCond"
  input: "gradients_1/GreaterEqual"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Switch_1"
  op: "Switch"
  input: "gradients_1/Merge_1"
  input: "gradients_1/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Sub"
  op: "Sub"
  input: "gradients_1/Switch_1:1"
  input: "gradients_1/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/NextIteration_1"
  op: "NextIteration"
  input: "gradients_1/Sub"
  input: "^gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/b_count_3"
  op: "Exit"
  input: "gradients_1/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/mul_3_grad/Shape"
  input: "gradients_1/mul_3_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/mul"
  op: "Mul"
  input: "gradients_1/Fill_1"
  input: "Sum_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_1/mul_3_grad/mul"
  input: "gradients_1/mul_3_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/mul_3_grad/Sum"
  input: "gradients_1/mul_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/mul_1"
  op: "Mul"
  input: "mul_3/x"
  input: "gradients_1/Fill_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/mul_3_grad/mul_1"
  input: "gradients_1/mul_3_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/mul_3_grad/Sum_1"
  input: "gradients_1/mul_3_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/Sum_3_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/mul_3_grad/Reshape_1"
  input: "gradients_1/Sum_3_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Sum_3_grad/Shape"
  op: "Shape"
  input: "Square"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Sum_3_grad/Tile"
  op: "Tile"
  input: "gradients_1/Sum_3_grad/Reshape"
  input: "gradients_1/Sum_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul/x"
  op: "Const"
  input: "^gradients_1/Sum_3_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul"
  op: "Mul"
  input: "gradients_1/Square_grad/mul/x"
  input: "sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/Square_grad/mul_1"
  op: "Mul"
  input: "gradients_1/Sum_3_grad/Tile"
  input: "gradients_1/Square_grad/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Shape"
  op: "Shape"
  input: "local/Reshape_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/sub_grad/Shape_1"
  op: "Shape"
  input: "r"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/sub_grad/Shape"
  input: "gradients_1/sub_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients_1/Square_grad/mul_1"
  input: "gradients_1/sub_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Sum"
  input: "gradients_1/sub_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/Square_grad/mul_1"
  input: "gradients_1/sub_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients_1/sub_grad/Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/sub_grad/Neg"
  input: "gradients_1/sub_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Reshape_4_grad/Shape"
  op: "Shape"
  input: "local/dense_2/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/sub_grad/Reshape"
  input: "gradients_1/local/Reshape_4_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/local/Reshape_4_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/local/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/local/Reshape_4_grad/Reshape"
  input: "local/dense_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_3"
  input: "gradients_1/local/Reshape_4_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/Reshape_3_grad/Shape"
  op: "Shape"
  input: "local/rnn/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/dense_2/MatMul_grad/MatMul"
  input: "gradients_1/local/Reshape_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/rnn/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/local/Reshape_3_grad/Reshape"
  input: "gradients_1/local/rnn/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/rnn/TensorArray"
  input: "local/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_1"
    }
  }
}
node {
  name: "gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/rnn/while/Exit_1"
  input: "^gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/rnn/TensorArrayStack/range"
  input: "gradients_1/local/rnn/transpose_grad/transpose"
  input: "gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/zeros"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/zeros_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients_1/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients_1/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients_1/zeros_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients_1/local/rnn/while/Exit_1_grad/b_exit"
  input: "gradients_1/local/rnn/while/Switch_1_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients_1/local/rnn/while/Exit_2_grad/b_exit"
  input: "gradients_1/local/rnn/while/Switch_2_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients_1/local/rnn/while/Exit_3_grad/b_exit"
  input: "gradients_1/local/rnn/while/Switch_3_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients_1/local/rnn/while/Switch_1_grad/b_switch"
  input: "gradients_1/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients_1/local/rnn/while/Switch_2_grad/b_switch"
  input: "gradients_1/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients_1/local/rnn/while/Switch_3_grad/b_switch"
  input: "gradients_1/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients_1/local/rnn/while/Merge_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients_1/local/rnn/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_1"
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients_1/local/rnn/while/Merge_1_grad/Switch:1"
  input: "^gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "local/rnn/while/Identity"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  input: "^gradients_1/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "^gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  input: "^gradients_1/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "^gradients_1/local/rnn/while/Select_grad/Select/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/RefEnter"
  input: "local/rnn/while/Identity_2"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual_1"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "gradients_1/local/rnn/while/Merge_2_grad/Switch:1"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like"
  input: "gradients_1/local/rnn/while/Merge_2_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/RefEnter"
  input: "local/rnn/while/Identity_3"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual_2"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "gradients_1/local/rnn/while/Merge_3_grad/Switch:1"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "gradients_1/local/rnn/while/Select_2_grad/zeros_like"
  input: "gradients_1/local/rnn/while/Merge_3_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/rnn/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients_1/local/rnn/while/Select_grad/zeros_like/Enter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/Select_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/Select_grad/Select/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select"
  op: "Select"
  input: "gradients_1/local/rnn/while/Select_grad/Select/StackPop"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients_1/local/rnn/while/Select_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients_1/local/rnn/while/Select_grad/Select/StackPop"
  input: "gradients_1/local/rnn/while/Select_grad/zeros_like"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc_1"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc_2"
  input: "gradients_1/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/Add"
  op: "Add"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/Switch:1"
  input: "gradients_1/local/rnn/while/Select_grad/Select"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN"
  op: "AddN"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select_1"
  input: "gradients_1/local/rnn/while/Select_grad/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients_1/AddN"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "gradients_1/AddN"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients_1/local/rnn/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/zeros_grad/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/zeros_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/rnn/while/Select/Enter_grad/b_acc_3"
  input: "gradients_1/local/rnn/zeros_grad/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_1"
  op: "AddN"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/AddN_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/AddN_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Sum_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients_1/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Sum_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Tanh"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_2"
  op: "AddN"
  input: "gradients_1/local/rnn/while/Select_1_grad/Select"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients_1/AddN_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Sum_1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/split/split_dim"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/add_grad/Reshape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "local/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/split_grad/concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  input: "^gradients_1/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  op: "Const"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset:1"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients_1/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_1"
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients_1/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/AddN_3"
  op: "AddN"
  input: "gradients_1/local/rnn/while/Select_2_grad/Select"
  input: "gradients_1/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/local/rnn/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_1/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients_1/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients_1/AddN_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/rnn/TensorArray_1"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_1"
    }
  }
}
node {
  name: "gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients_1/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/rnn/TensorArrayUnstack/range"
  input: "gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients_1/local/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose_2/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_1/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients_1/local/transpose_2_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/ExpandDims_2_grad/Shape"
  op: "Shape"
  input: "local/Reshape_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/ExpandDims_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/transpose_2_grad/transpose"
  input: "gradients_1/local/ExpandDims_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Reshape_2_grad/Shape"
  op: "Shape"
  input: "local/Sum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/ExpandDims_2_grad/Reshape"
  input: "gradients_1/local/Reshape_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Shape"
  op: "Shape"
  input: "local/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/add"
  op: "Add"
  input: "local/Sum/reduction_indices"
  input: "gradients_1/local/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_1/local/Sum_grad/add"
  input: "gradients_1/local/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/range"
  op: "Range"
  input: "gradients_1/local/Sum_grad/range/start"
  input: "gradients_1/local/Sum_grad/Size"
  input: "gradients_1/local/Sum_grad/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Fill/value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_1/local/Sum_grad/Shape_1"
  input: "gradients_1/local/Sum_grad/Fill/value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_1/local/Sum_grad/range"
  input: "gradients_1/local/Sum_grad/mod"
  input: "gradients_1/local/Sum_grad/Shape"
  input: "gradients_1/local/Sum_grad/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Maximum/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_1/local/Sum_grad/DynamicStitch"
  input: "gradients_1/local/Sum_grad/Maximum/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_1/local/Sum_grad/Shape"
  input: "gradients_1/local/Sum_grad/Maximum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/Reshape_2_grad/Reshape"
  input: "gradients_1/local/Sum_grad/DynamicStitch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/local/Sum_grad/Reshape"
  input: "gradients_1/local/Sum_grad/floordiv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/Shape"
  op: "Shape"
  input: "local/ExpandDims"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\r\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/local/mul_grad/Shape"
  input: "gradients_1/local/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/mul"
  op: "Mul"
  input: "gradients_1/local/Sum_grad/Tile"
  input: "local/ExpandDims_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/mul_grad/mul"
  input: "gradients_1/local/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/mul_grad/Sum"
  input: "gradients_1/local/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/mul_1"
  op: "Mul"
  input: "local/ExpandDims"
  input: "gradients_1/local/Sum_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/local/mul_grad/mul_1"
  input: "gradients_1/local/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/local/mul_grad/Sum_1"
  input: "gradients_1/local/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/ExpandDims_grad/Shape"
  op: "Shape"
  input: "local/transpose_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/mul_grad/Reshape"
  input: "gradients_1/local/ExpandDims_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose_1/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_1/local/ExpandDims_grad/Reshape"
  input: "gradients_1/local/transpose_1_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Reshape_1_grad/Shape"
  op: "Shape"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/transpose_1_grad/transpose"
  input: "gradients_1/local/Reshape_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/mul"
  op: "Mul"
  input: "gradients_1/local/Reshape_1_grad/Reshape"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients_1/local/Softmax_grad/mul"
  input: "gradients_1/local/Softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/Softmax_grad/Sum"
  input: "gradients_1/local/Softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/sub"
  op: "Sub"
  input: "gradients_1/local/Reshape_1_grad/Reshape"
  input: "gradients_1/local/Softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients_1/local/Softmax_grad/sub"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/Reshape_grad/Shape"
  op: "Shape"
  input: "local/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/local/Softmax_grad/mul_1"
  input: "gradients_1/local/Reshape_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_1/local/Reshape_grad/Reshape"
  input: "gradients_1/local/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_4/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_1/local/transpose_grad/transpose"
  input: "local/conv2d_4/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/local/conv2d_4/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d_3/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/conv2d_4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/local/conv2d_4/convolution_grad/Shape"
  input: "local/conv2d_3/kernel/read"
  input: "gradients_1/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d_4/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d_3/Elu"
  input: "gradients_1/local/conv2d_4/convolution_grad/Shape_1"
  input: "gradients_1/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d_3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_1/local/conv2d_4/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d_3/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/local/conv2d_3/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d_2/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/conv2d_3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/local/conv2d_3/convolution_grad/Shape"
  input: "local/conv2d_2/kernel/read"
  input: "gradients_1/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d_3/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d_2/Elu"
  input: "gradients_1/local/conv2d_3/convolution_grad/Shape_1"
  input: "gradients_1/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d_2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_1/local/conv2d_3/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d_2/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/local/conv2d_2/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/conv2d_2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/local/conv2d_2/convolution_grad/Shape"
  input: "local/conv2d_1/kernel/read"
  input: "gradients_1/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d_2/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d/Elu"
  input: "gradients_1/local/conv2d_2/convolution_grad/Shape_1"
  input: "gradients_1/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_1/local/conv2d_2/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_1/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_1/local/conv2d/convolution_grad/Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/local/conv2d/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/local/conv2d/convolution_grad/Shape"
  input: "local/conv2d/kernel/read"
  input: "gradients_1/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/local/conv2d/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_1/local/conv2d/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Placeholder"
  input: "gradients_1/local/conv2d/convolution_grad/Shape_1"
  input: "gradients_1/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Abs_2"
  op: "Abs"
  input: "gradients_1/local/conv2d/convolution_grad/Conv2DBackpropInput"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Shape"
  op: "Shape"
  input: "add_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_2/Fill"
  op: "Fill"
  input: "gradients_2/Shape"
  input: "gradients_2/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/f_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/f_count_1"
  op: "Enter"
  input: "gradients_2/f_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/Merge"
  op: "Merge"
  input: "gradients_2/f_count_1"
  input: "gradients_2/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Switch"
  op: "Switch"
  input: "gradients_2/Merge"
  input: "local/rnn/while/LoopCond"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Add/y"
  op: "Const"
  input: "^local/rnn/while/Identity"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Add"
  op: "Add"
  input: "gradients_2/Switch:1"
  input: "gradients_2/Add/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/NextIteration"
  op: "NextIteration"
  input: "gradients_2/Add"
  input: "^gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPush"
  input: "^gradients_2/local/rnn/while/Select_1_grad/Select/StackPush"
  input: "^gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPush"
  input: "^gradients_2/local/rnn/while/Select_2_grad/Select/StackPush"
  input: "^gradients_2/local/rnn/while/Select_grad/Select/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/f_count_2"
  op: "Exit"
  input: "gradients_2/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/b_count"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/b_count_1"
  op: "Enter"
  input: "gradients_2/f_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/Merge_1"
  op: "Merge"
  input: "gradients_2/b_count_1"
  input: "gradients_2/NextIteration_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients_2/b_count"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients_2/Merge_1"
  input: "gradients_2/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/b_count_2"
  op: "LoopCond"
  input: "gradients_2/GreaterEqual"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Switch_1"
  op: "Switch"
  input: "gradients_2/Merge_1"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sub"
  op: "Sub"
  input: "gradients_2/Switch_1:1"
  input: "gradients_2/GreaterEqual/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/NextIteration_1"
  op: "NextIteration"
  input: "gradients_2/Sub"
  input: "^gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/b_count_3"
  op: "Exit"
  input: "gradients_2/Switch_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "Reshape_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/add_1_grad/Shape"
  input: "gradients_2/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/Fill"
  input: "gradients_2/add_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_1_grad/Sum"
  input: "gradients_2/add_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/Fill"
  input: "gradients_2/add_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/add_1_grad/Sum_1"
  input: "gradients_2/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/sub_1_grad/Shape"
  input: "gradients_2/sub_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/add_1_grad/Reshape"
  input: "gradients_2/sub_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/sub_1_grad/Sum"
  input: "gradients_2/sub_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/add_1_grad/Reshape"
  input: "gradients_2/sub_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients_2/sub_1_grad/Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/sub_1_grad/Neg"
  input: "gradients_2/sub_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Reshape_3_grad/Shape"
  op: "Shape"
  input: "SoftmaxCrossEntropyWithLogits"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_1_grad/Reshape_1"
  input: "gradients_2/Reshape_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/add_grad/Shape"
  input: "gradients_2/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_grad/Sum"
  op: "Sum"
  input: "gradients_2/sub_1_grad/Reshape"
  input: "gradients_2/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_grad/Sum"
  input: "gradients_2/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/sub_1_grad/Reshape"
  input: "gradients_2/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/add_grad/Sum_1"
  input: "gradients_2/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_6_grad/Shape"
  input: "gradients_2/mul_6_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/mul"
  op: "Mul"
  input: "gradients_2/sub_1_grad/Reshape_1"
  input: "mul_6/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_6_grad/mul"
  input: "gradients_2/mul_6_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_6_grad/Sum"
  input: "gradients_2/mul_6_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/mul_1"
  op: "Mul"
  input: "Neg_2"
  input: "gradients_2/sub_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_6_grad/mul_1"
  input: "gradients_2/mul_6_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_6_grad/Sum_1"
  input: "gradients_2/mul_6_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/zeros_like"
  op: "ZerosLike"
  input: "SoftmaxCrossEntropyWithLogits:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients_2/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_2/Reshape_3_grad/Reshape"
  input: "gradients_2/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/SoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients_2/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "SoftmaxCrossEntropyWithLogits:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Neg_1_grad/Neg"
  op: "Neg"
  input: "gradients_2/add_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_5_grad/Shape"
  input: "gradients_2/mul_5_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/mul"
  op: "Mul"
  input: "gradients_2/add_grad/Reshape_1"
  input: "mul_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_5_grad/mul"
  input: "gradients_2/mul_5_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_5_grad/Sum"
  input: "gradients_2/mul_5_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/mul_1"
  op: "Mul"
  input: "mul_5/x"
  input: "gradients_2/add_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_5_grad/mul_1"
  input: "gradients_2/mul_5_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_5_grad/Sum_1"
  input: "gradients_2/mul_5_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Neg_2_grad/Neg"
  op: "Neg"
  input: "gradients_2/mul_6_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Reshape_1_grad/Shape"
  op: "Shape"
  input: "local/dense/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/SoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients_2/Reshape_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_2_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Neg_1_grad/Neg"
  input: "gradients_2/Sum_2_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_2_grad/Shape"
  op: "Shape"
  input: "mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients_2/Sum_2_grad/Reshape"
  input: "gradients_2/Sum_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/Shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_3_grad/Shape"
  input: "gradients_2/mul_3_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/mul"
  op: "Mul"
  input: "gradients_2/mul_5_grad/Reshape_1"
  input: "Sum_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_3_grad/mul"
  input: "gradients_2/mul_3_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_3_grad/Sum"
  input: "gradients_2/mul_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/mul_1"
  op: "Mul"
  input: "mul_3/x"
  input: "gradients_2/mul_5_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_3_grad/mul_1"
  input: "gradients_2/mul_3_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_3_grad/Sum_1"
  input: "gradients_2/mul_3_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_4_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Sum_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Neg_2_grad/Neg"
  input: "gradients_2/Sum_4_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_4_grad/Shape"
  op: "Shape"
  input: "mul_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Sum_4_grad/Tile"
  op: "Tile"
  input: "gradients_2/Sum_4_grad/Reshape"
  input: "gradients_2/Sum_4_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/Shape"
  op: "Shape"
  input: "Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/Shape_1"
  op: "Shape"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_2_grad/Shape"
  input: "gradients_2/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/mul"
  op: "Mul"
  input: "gradients_2/Sum_2_grad/Tile"
  input: "adv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_2_grad/mul"
  input: "gradients_2/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_2_grad/Sum"
  input: "gradients_2/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/mul_1"
  op: "Mul"
  input: "Sum_1"
  input: "gradients_2/Sum_2_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_2_grad/mul_1"
  input: "gradients_2/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_2_grad/Sum_1"
  input: "gradients_2/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_3_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_3_grad/Reshape_1"
  input: "gradients_2/Sum_3_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_3_grad/Shape"
  op: "Shape"
  input: "Square"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Sum_3_grad/Tile"
  op: "Tile"
  input: "gradients_2/Sum_3_grad/Reshape"
  input: "gradients_2/Sum_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/Shape"
  op: "Shape"
  input: "Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/Shape_1"
  op: "Shape"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_4_grad/Shape"
  input: "gradients_2/mul_4_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/mul"
  op: "Mul"
  input: "gradients_2/Sum_4_grad/Tile"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_4_grad/mul"
  input: "gradients_2/mul_4_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_4_grad/Sum"
  input: "gradients_2/mul_4_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/mul_1"
  op: "Mul"
  input: "Softmax"
  input: "gradients_2/Sum_4_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_4_grad/mul_1"
  input: "gradients_2/mul_4_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_4_grad/Sum_1"
  input: "gradients_2/mul_4_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Shape"
  op: "Shape"
  input: "mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/add"
  op: "Add"
  input: "Sum_1/reduction_indices"
  input: "gradients_2/Sum_1_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients_2/Sum_1_grad/add"
  input: "gradients_2/Sum_1_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/range"
  op: "Range"
  input: "gradients_2/Sum_1_grad/range/start"
  input: "gradients_2/Sum_1_grad/Size"
  input: "gradients_2/Sum_1_grad/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Fill/value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients_2/Sum_1_grad/Shape_1"
  input: "gradients_2/Sum_1_grad/Fill/value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/Sum_1_grad/range"
  input: "gradients_2/Sum_1_grad/mod"
  input: "gradients_2/Sum_1_grad/Shape"
  input: "gradients_2/Sum_1_grad/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Maximum/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients_2/Sum_1_grad/DynamicStitch"
  input: "gradients_2/Sum_1_grad/Maximum/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_2/Sum_1_grad/Shape"
  input: "gradients_2/Sum_1_grad/Maximum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_2_grad/Reshape"
  input: "gradients_2/Sum_1_grad/DynamicStitch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_2/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_2/Sum_1_grad/Reshape"
  input: "gradients_2/Sum_1_grad/floordiv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Square_grad/mul/x"
  op: "Const"
  input: "^gradients_2/Sum_3_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients_2/Square_grad/mul"
  op: "Mul"
  input: "gradients_2/Square_grad/mul/x"
  input: "sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Square_grad/mul_1"
  op: "Mul"
  input: "gradients_2/Sum_3_grad/Tile"
  input: "gradients_2/Square_grad/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/mul"
  op: "Mul"
  input: "gradients_2/mul_4_grad/Reshape"
  input: "Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients_2/Softmax_grad/mul"
  input: "gradients_2/Softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/Softmax_grad/Sum"
  input: "gradients_2/Softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/sub"
  op: "Sub"
  input: "gradients_2/mul_4_grad/Reshape"
  input: "gradients_2/Softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients_2/Softmax_grad/sub"
  input: "Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Shape"
  op: "Shape"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/mul_1_grad/Shape"
  input: "gradients_2/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/mul"
  op: "Mul"
  input: "gradients_2/Sum_1_grad/Tile"
  input: "ac"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/mul_1_grad/mul"
  input: "gradients_2/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/mul_1_grad/Sum"
  input: "gradients_2/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/mul_1"
  op: "Mul"
  input: "LogSoftmax"
  input: "gradients_2/Sum_1_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/mul_1_grad/mul_1"
  input: "gradients_2/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/mul_1_grad/Sum_1"
  input: "gradients_2/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/Shape"
  op: "Shape"
  input: "local/Reshape_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/sub_grad/Shape_1"
  op: "Shape"
  input: "r"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/sub_grad/Shape"
  input: "gradients_2/sub_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/Sum"
  op: "Sum"
  input: "gradients_2/Square_grad/mul_1"
  input: "gradients_2/sub_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/sub_grad/Sum"
  input: "gradients_2/sub_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/Square_grad/mul_1"
  input: "gradients_2/sub_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/sub_grad/Neg"
  op: "Neg"
  input: "gradients_2/sub_grad/Sum_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_2/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/sub_grad/Neg"
  input: "gradients_2/sub_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN"
  op: "AddN"
  input: "gradients_2/mul_4_grad/Reshape_1"
  input: "gradients_2/mul_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/LogSoftmax_grad/Exp"
  op: "Exp"
  input: "LogSoftmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/LogSoftmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/LogSoftmax_grad/Sum"
  op: "Sum"
  input: "gradients_2/AddN"
  input: "gradients_2/LogSoftmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/LogSoftmax_grad/mul"
  op: "Mul"
  input: "gradients_2/LogSoftmax_grad/Sum"
  input: "gradients_2/LogSoftmax_grad/Exp"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/LogSoftmax_grad/sub"
  op: "Sub"
  input: "gradients_2/AddN"
  input: "gradients_2/LogSoftmax_grad/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Reshape_4_grad/Shape"
  op: "Shape"
  input: "local/dense_2/BiasAdd"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/sub_grad/Reshape"
  input: "gradients_2/local/Reshape_4_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_1"
  op: "AddN"
  input: "gradients_2/Reshape_1_grad/Reshape"
  input: "gradients_2/Softmax_grad/mul_1"
  input: "gradients_2/LogSoftmax_grad/sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/AddN_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/local/Reshape_4_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/AddN_1"
  input: "local/dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_3"
  input: "gradients_2/AddN_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/local/Reshape_4_grad/Reshape"
  input: "local/dense_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "local/Reshape_3"
  input: "gradients_2/local/Reshape_4_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/AddN_2"
  op: "AddN"
  input: "gradients_2/local/dense/MatMul_grad/MatMul"
  input: "gradients_2/local/dense_2/MatMul_grad/MatMul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Reshape_3_grad/Shape"
  op: "Shape"
  input: "local/rnn/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/AddN_2"
  input: "gradients_2/local/Reshape_3_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/rnn/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_2/local/Reshape_3_grad/Reshape"
  input: "gradients_2/local/rnn/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/rnn/TensorArray"
  input: "local/rnn/while/Exit_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_2"
    }
  }
}
node {
  name: "gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "local/rnn/while/Exit_1"
  input: "^gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/rnn/TensorArrayStack/range"
  input: "gradients_2/local/rnn/transpose_grad/transpose"
  input: "gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/zeros"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/zeros_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients_2/local/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients_2/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients_2/zeros_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients_2/local/rnn/while/Exit_1_grad/b_exit"
  input: "gradients_2/local/rnn/while/Switch_1_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients_2/local/rnn/while/Exit_2_grad/b_exit"
  input: "gradients_2/local/rnn/while/Switch_2_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients_2/local/rnn/while/Exit_3_grad/b_exit"
  input: "gradients_2/local/rnn/while/Switch_3_grad_1/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/Switch_1_grad/b_switch"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/Switch_2_grad/b_switch"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/Switch_3_grad/b_switch"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients_2/local/rnn/while/Merge_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients_2/local/rnn/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_2"
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients_2/local/rnn/while/Merge_1_grad/Switch:1"
  input: "^gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "local/rnn/while/Identity"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
        s: "loc:@local/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  input: "^gradients_2/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "^gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  input: "^gradients_2/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "^gradients_2/local/rnn/while/Select_grad/Select/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/RefEnter"
  input: "local/rnn/while/Identity_2"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual_1"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select"
  op: "Select"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "gradients_2/local/rnn/while/Merge_2_grad/Switch:1"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_1_grad/Select_1"
  op: "Select"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select/StackPop"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like"
  input: "gradients_2/local/rnn/while/Merge_2_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/RefEnter"
  input: "local/rnn/while/Identity_3"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual_2"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select"
  op: "Select"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "gradients_2/local/rnn/while/Merge_3_grad/Switch:1"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_2_grad/Select_1"
  op: "Select"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select/StackPop"
  input: "gradients_2/local/rnn/while/Select_2_grad/zeros_like"
  input: "gradients_2/local/rnn/while/Merge_3_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "local/rnn/zeros"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "gradients_2/local/rnn/while/Select_grad/zeros_like/Enter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/Select_grad/Select/RefEnter"
  input: "local/rnn/while/GreaterEqual"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/Select_grad/Select/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/Select_grad/Select/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select"
  op: "Select"
  input: "gradients_2/local/rnn/while/Select_grad/Select/StackPop"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "gradients_2/local/rnn/while/Select_grad/zeros_like"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select_grad/Select_1"
  op: "Select"
  input: "gradients_2/local/rnn/while/Select_grad/Select/StackPop"
  input: "gradients_2/local/rnn/while/Select_grad/zeros_like"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc_1"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc_2"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/Add"
  op: "Add"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/Switch:1"
  input: "gradients_2/local/rnn/while/Select_grad/Select"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_3"
  op: "AddN"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select_1"
  input: "gradients_2/local/rnn/while/Select_grad/Select_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Select_2_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_2"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "gradients_2/AddN_3"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Tanh_1"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "gradients_2/AddN_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients_2/local/rnn/while/Merge_1_grad/Switch:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/zeros_grad/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/zeros_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/rnn/while/Select/Enter_grad/b_acc_3"
  input: "gradients_2/local/rnn/zeros_grad/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_2_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_4"
  op: "AddN"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/AddN_4"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/AddN_4"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Sum_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients_2/local/rnn/while/Select_1_grad/zeros_like/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Sum_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Tanh"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/Sigmoid_1"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_5"
  op: "AddN"
  input: "gradients_2/local/rnn/while/Select_1_grad/Select"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/mul_1_grad/Reshape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients_2/AddN_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Sum_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/split/split_dim"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/add_grad/Reshape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat/StackPop"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "local/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 320
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/split_grad/concat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch:1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  op: "Stack"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  input: "local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  input: "^gradients_2/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  op: "Const"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset:1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_2"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch:1"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "local/rnn/TensorArray_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients_2/Sub"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_2"
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients_2/local/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/AddN_6"
  op: "AddN"
  input: "gradients_2/local/rnn/while/Select_2_grad/Select"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/Select_2_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients_2/local/rnn/while/local/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients_2/b_count_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients_2/AddN_6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "local/rnn/TensorArray_1"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients_2"
    }
  }
}
node {
  name: "gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients_2/local/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "local/rnn/TensorArrayUnstack/range"
  input: "gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients_2/local/transpose_2_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose_2/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/transpose_2_grad/transpose"
  op: "Transpose"
  input: "gradients_2/local/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients_2/local/transpose_2_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/ExpandDims_2_grad/Shape"
  op: "Shape"
  input: "local/Reshape_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/ExpandDims_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/transpose_2_grad/transpose"
  input: "gradients_2/local/ExpandDims_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Reshape_2_grad/Shape"
  op: "Shape"
  input: "local/Sum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/ExpandDims_2_grad/Reshape"
  input: "gradients_2/local/Reshape_2_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Shape"
  op: "Shape"
  input: "local/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Size"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/add"
  op: "Add"
  input: "local/Sum/reduction_indices"
  input: "gradients_2/local/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients_2/local/Sum_grad/add"
  input: "gradients_2/local/Sum_grad/Size"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/range/start"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/range/delta"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/range"
  op: "Range"
  input: "gradients_2/local/Sum_grad/range/start"
  input: "gradients_2/local/Sum_grad/Size"
  input: "gradients_2/local/Sum_grad/range/delta"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Fill/value"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Fill"
  op: "Fill"
  input: "gradients_2/local/Sum_grad/Shape_1"
  input: "gradients_2/local/Sum_grad/Fill/value"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients_2/local/Sum_grad/range"
  input: "gradients_2/local/Sum_grad/mod"
  input: "gradients_2/local/Sum_grad/Shape"
  input: "gradients_2/local/Sum_grad/Fill"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Maximum/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients_2/local/Sum_grad/DynamicStitch"
  input: "gradients_2/local/Sum_grad/Maximum/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients_2/local/Sum_grad/Shape"
  input: "gradients_2/local/Sum_grad/Maximum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/Reshape_2_grad/Reshape"
  input: "gradients_2/local/Sum_grad/DynamicStitch"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_2/local/Sum_grad/Reshape"
  input: "gradients_2/local/Sum_grad/floordiv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/Shape"
  op: "Shape"
  input: "local/ExpandDims"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\010\000\000\000\r\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/local/mul_grad/Shape"
  input: "gradients_2/local/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/mul"
  op: "Mul"
  input: "gradients_2/local/Sum_grad/Tile"
  input: "local/ExpandDims_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/mul_grad/mul"
  input: "gradients_2/local/mul_grad/BroadcastGradientArgs"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/mul_grad/Sum"
  input: "gradients_2/local/mul_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/mul_1"
  op: "Mul"
  input: "local/ExpandDims"
  input: "gradients_2/local/Sum_grad/Tile"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/local/mul_grad/mul_1"
  input: "gradients_2/local/mul_grad/BroadcastGradientArgs:1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/local/mul_grad/Sum_1"
  input: "gradients_2/local/mul_grad/Shape_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/ExpandDims_grad/Shape"
  op: "Shape"
  input: "local/transpose_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/mul_grad/Reshape"
  input: "gradients_2/local/ExpandDims_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose_1/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients_2/local/ExpandDims_grad/Reshape"
  input: "gradients_2/local/transpose_1_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Reshape_1_grad/Shape"
  op: "Shape"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/transpose_1_grad/transpose"
  input: "gradients_2/local/Reshape_1_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/mul"
  op: "Mul"
  input: "gradients_2/local/Reshape_1_grad/Reshape"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients_2/local/Softmax_grad/mul"
  input: "gradients_2/local/Softmax_grad/Sum/reduction_indices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/Reshape/shape"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/Softmax_grad/Sum"
  input: "gradients_2/local/Softmax_grad/Reshape/shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/sub"
  op: "Sub"
  input: "gradients_2/local/Reshape_1_grad/Reshape"
  input: "gradients_2/local/Softmax_grad/Reshape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients_2/local/Softmax_grad/sub"
  input: "local/Softmax"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 104
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/Reshape_grad/Shape"
  op: "Shape"
  input: "local/transpose"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/local/Softmax_grad/mul_1"
  input: "gradients_2/local/Reshape_grad/Shape"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "local/transpose/perm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients_2/local/Reshape_grad/Reshape"
  input: "gradients_2/local/transpose_grad/InvertPermutation"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_4/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_2/local/transpose_grad/transpose"
  input: "local/conv2d_4/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 13
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/conv2d_4/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d_3/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/local/conv2d_4/convolution_grad/Shape"
  input: "local/conv2d_3/kernel/read"
  input: "gradients_2/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d_4/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d_3/Elu"
  input: "gradients_2/local/conv2d_4/convolution_grad/Shape_1"
  input: "gradients_2/local/conv2d_4/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d_3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d_3/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 25
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/conv2d_3/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d_2/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/local/conv2d_3/convolution_grad/Shape"
  input: "local/conv2d_2/kernel/read"
  input: "gradients_2/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d_3/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d_2/Elu"
  input: "gradients_2/local/conv2d_3/convolution_grad/Shape_1"
  input: "gradients_2/local/conv2d_3/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d_2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d_2/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/conv2d_2/convolution_grad/Shape"
  op: "Shape"
  input: "local/conv2d/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/local/conv2d_2/convolution_grad/Shape"
  input: "local/conv2d_1/kernel/read"
  input: "gradients_2/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d_2/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/conv2d/Elu"
  input: "gradients_2/local/conv2d_2/convolution_grad/Shape_1"
  input: "gradients_2/local/conv2d_2/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropInput"
  input: "local/conv2d/Elu"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
          dim {
            size: 100
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients_2/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients_2/local/conv2d/convolution_grad/Shape"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/local/conv2d/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/local/conv2d/convolution_grad/Shape"
  input: "local/conv2d/kernel/read"
  input: "gradients_2/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/local/conv2d/convolution_grad/Shape_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "local/Placeholder"
  input: "gradients_2/local/conv2d/convolution_grad/Shape_1"
  input: "gradients_2/local/conv2d/Elu_grad/EluGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Neg_1"
  input: "ToFloat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/policy_loss/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/policy_loss"
      }
    }
  }
}
node {
  name: "model/policy_loss"
  op: "ScalarSummary"
  input: "model/policy_loss/tags"
  input: "truediv"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "mul_3"
  input: "ToFloat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/value_loss/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/value_loss"
      }
    }
  }
}
node {
  name: "model/value_loss"
  op: "ScalarSummary"
  input: "model/value_loss/tags"
  input: "truediv_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "Neg_2"
  input: "ToFloat"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/entropy/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/entropy"
      }
    }
  }
}
node {
  name: "model/entropy"
  op: "ScalarSummary"
  input: "model/entropy/tags"
  input: "truediv_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/state/tag"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/state"
      }
    }
  }
}
node {
  name: "model/state"
  op: "ImageSummary"
  input: "model/state/tag"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "model/saliency_value/tag"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/saliency_value"
      }
    }
  }
}
node {
  name: "model/saliency_value"
  op: "ImageSummary"
  input: "model/saliency_value/tag"
  input: "Abs_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "model/saliency_policy/tag"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/saliency_policy"
      }
    }
  }
}
node {
  name: "model/saliency_policy"
  op: "ImageSummary"
  input: "model/saliency_policy/tag"
  input: "Abs_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_6"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_7"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_8"
  op: "L2Loss"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_9"
  op: "L2Loss"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_10"
  op: "L2Loss"
  input: "gradients_2/local/dense/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_11"
  op: "L2Loss"
  input: "gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_12"
  op: "L2Loss"
  input: "gradients_2/local/dense_2/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_13"
  op: "L2Loss"
  input: "gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/stack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  input: "global_norm/L2Loss_6"
  input: "global_norm/L2Loss_7"
  input: "global_norm/L2Loss_8"
  input: "global_norm/L2Loss_9"
  input: "global_norm/L2Loss_10"
  input: "global_norm/L2Loss_11"
  input: "global_norm/L2Loss_12"
  input: "global_norm/L2Loss_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/stack"
  input: "global_norm/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/grad_global_norm/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/grad_global_norm"
      }
    }
  }
}
node {
  name: "model/grad_global_norm"
  op: "ScalarSummary"
  input: "model/grad_global_norm/tags"
  input: "global_norm/global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "local/conv2d/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "local/conv2d/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "local/conv2d_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "local/conv2d_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "local/conv2d_2/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "local/conv2d_2/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "local/conv2d_3/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "local/conv2d_3/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "local/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights/read"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "local/rnn/basic_lstm_cell/biases/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/biases/read"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "local/dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "local/dense/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "local/dense_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "local/dense_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/stack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  input: "global_norm_1/L2Loss_1"
  input: "global_norm_1/L2Loss_2"
  input: "global_norm_1/L2Loss_3"
  input: "global_norm_1/L2Loss_4"
  input: "global_norm_1/L2Loss_5"
  input: "global_norm_1/L2Loss_6"
  input: "global_norm_1/L2Loss_7"
  input: "global_norm_1/L2Loss_8"
  input: "global_norm_1/L2Loss_9"
  input: "global_norm_1/L2Loss_10"
  input: "global_norm_1/L2Loss_11"
  input: "global_norm_1/L2Loss_12"
  input: "global_norm_1/L2Loss_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/stack"
  input: "global_norm_1/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/var_global_norm/tags"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/var_global_norm"
      }
    }
  }
}
node {
  name: "model/var_global_norm"
  op: "ScalarSummary"
  input: "model/var_global_norm/tags"
  input: "global_norm_1/global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary_1"
  op: "MergeSummary"
  input: "loss"
  input: "accuracy"
  input: "saliency"
  input: "image"
  input: "model/policy_loss"
  input: "model/value_loss"
  input: "model/entropy"
  input: "model/state"
  input: "model/saliency_value"
  input: "model/saliency_policy"
  input: "model/grad_global_norm"
  input: "model/var_global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 12
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_1"
  op: "L2Loss"
  input: "gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_2"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_3"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_4"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_5"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_6"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_7"
  op: "L2Loss"
  input: "gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_8"
  op: "L2Loss"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_9"
  op: "L2Loss"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_10"
  op: "L2Loss"
  input: "gradients_2/local/dense/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_11"
  op: "L2Loss"
  input: "gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_12"
  op: "L2Loss"
  input: "gradients_2/local/dense_2/MatMul_grad/MatMul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/L2Loss_13"
  op: "L2Loss"
  input: "gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/stack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  input: "global_norm_2/L2Loss_1"
  input: "global_norm_2/L2Loss_2"
  input: "global_norm_2/L2Loss_3"
  input: "global_norm_2/L2Loss_4"
  input: "global_norm_2/L2Loss_5"
  input: "global_norm_2/L2Loss_6"
  input: "global_norm_2/L2Loss_7"
  input: "global_norm_2/L2Loss_8"
  input: "global_norm_2/L2Loss_9"
  input: "global_norm_2/L2Loss_10"
  input: "global_norm_2/L2Loss_11"
  input: "global_norm_2/L2Loss_12"
  input: "global_norm_2/L2Loss_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 14
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/stack"
  input: "global_norm_2/Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm_2/global_norm"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1/y"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 40.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "clip_by_global_norm/Const"
  input: "clip_by_global_norm/truediv_1/y"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/truediv_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 40.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_7"
  op: "Mul"
  input: "gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_6"
  op: "Identity"
  input: "clip_by_global_norm/mul_7"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/convolution_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_8"
  op: "Mul"
  input: "gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_7"
  op: "Identity"
  input: "clip_by_global_norm/mul_8"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/conv2d_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_9"
  op: "Mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_8"
  op: "Identity"
  input: "clip_by_global_norm/mul_9"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_10"
  op: "Mul"
  input: "gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_9"
  op: "Identity"
  input: "clip_by_global_norm/mul_10"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/rnn/while/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_11"
  op: "Mul"
  input: "gradients_2/local/dense/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_10"
  op: "Identity"
  input: "clip_by_global_norm/mul_11"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_12"
  op: "Mul"
  input: "gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_11"
  op: "Identity"
  input: "clip_by_global_norm/mul_12"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_13"
  op: "Mul"
  input: "gradients_2/local/dense_2/MatMul_grad/MatMul_1"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_12"
  op: "Identity"
  input: "clip_by_global_norm/mul_13"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_14"
  op: "Mul"
  input: "gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
  input: "clip_by_global_norm/mul"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_13"
  op: "Identity"
  input: "clip_by_global_norm/mul_14"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/local/dense_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "local/conv2d/kernel"
  input: "global/conv2d/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "local/conv2d/bias"
  input: "global/conv2d/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "local/conv2d_1/kernel"
  input: "global/conv2d_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "local/conv2d_1/bias"
  input: "global/conv2d_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "local/conv2d_2/kernel"
  input: "global/conv2d_2/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "local/conv2d_2/bias"
  input: "global/conv2d_2/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "local/conv2d_3/kernel"
  input: "global/conv2d_3/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "local/conv2d_3/bias"
  input: "global/conv2d_3/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "local/rnn/basic_lstm_cell/weights"
  input: "global/rnn/basic_lstm_cell/weights/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "local/rnn/basic_lstm_cell/biases"
  input: "global/rnn/basic_lstm_cell/biases/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "local/dense/kernel"
  input: "global/dense/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "local/dense/bias"
  input: "global/dense/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "local/dense_1/kernel"
  input: "global/dense_1/kernel/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "local/dense_1/bias"
  input: "global/dense_1/bias/read"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@local/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^Assign"
  input: "^Assign_1"
  input: "^Assign_2"
  input: "^Assign_3"
  input: "^Assign_4"
  input: "^Assign_5"
  input: "^Assign_6"
  input: "^Assign_7"
  input: "^Assign_8"
  input: "^Assign_9"
  input: "^Assign_10"
  input: "^Assign_11"
  input: "^Assign_12"
  input: "^Assign_13"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "Shape_4"
  op: "Shape"
  input: "local/Placeholder"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape_4"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global/global_step"
  input: "strided_slice_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "beta1_power_1/initial_value"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power_1/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "beta1_power_1/initial_value"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power_1/read"
  op: "Identity"
  input: "beta1_power_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power_1/initial_value"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power_1/Assign"
  op: "Assign"
  input: "beta2_power_1"
  input: "beta2_power_1/initial_value"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power_1/read"
  op: "Identity"
  input: "beta2_power_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam/Assign"
  op: "Assign"
  input: "global/conv2d/kernel/Adam"
  input: "global/conv2d/kernel/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam/read"
  op: "Identity"
  input: "global/conv2d/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d/kernel/Adam_1"
  input: "global/conv2d/kernel/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/kernel/Adam_1/read"
  op: "Identity"
  input: "global/conv2d/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d/bias/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d/bias/Adam/Assign"
  op: "Assign"
  input: "global/conv2d/bias/Adam"
  input: "global/conv2d/bias/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/bias/Adam/read"
  op: "Identity"
  input: "global/conv2d/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d/bias/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d/bias/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d/bias/Adam_1"
  input: "global/conv2d/bias/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d/bias/Adam_1/read"
  op: "Identity"
  input: "global/conv2d/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam/Assign"
  op: "Assign"
  input: "global/conv2d_1/kernel/Adam"
  input: "global/conv2d_1/kernel/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam/read"
  op: "Identity"
  input: "global/conv2d_1/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d_1/kernel/Adam_1"
  input: "global/conv2d_1/kernel/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_1/kernel/Adam_1/read"
  op: "Identity"
  input: "global/conv2d_1/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam/Assign"
  op: "Assign"
  input: "global/conv2d_1/bias/Adam"
  input: "global/conv2d_1/bias/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam/read"
  op: "Identity"
  input: "global/conv2d_1/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d_1/bias/Adam_1"
  input: "global/conv2d_1/bias/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_1/bias/Adam_1/read"
  op: "Identity"
  input: "global/conv2d_1/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam/Assign"
  op: "Assign"
  input: "global/conv2d_2/kernel/Adam"
  input: "global/conv2d_2/kernel/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam/read"
  op: "Identity"
  input: "global/conv2d_2/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d_2/kernel/Adam_1"
  input: "global/conv2d_2/kernel/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/kernel/Adam_1/read"
  op: "Identity"
  input: "global/conv2d_2/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam/Assign"
  op: "Assign"
  input: "global/conv2d_2/bias/Adam"
  input: "global/conv2d_2/bias/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam/read"
  op: "Identity"
  input: "global/conv2d_2/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d_2/bias/Adam_1"
  input: "global/conv2d_2/bias/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_2/bias/Adam_1/read"
  op: "Identity"
  input: "global/conv2d_2/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam/Assign"
  op: "Assign"
  input: "global/conv2d_3/kernel/Adam"
  input: "global/conv2d_3/kernel/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam/read"
  op: "Identity"
  input: "global/conv2d_3/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d_3/kernel/Adam_1"
  input: "global/conv2d_3/kernel/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/kernel/Adam_1/read"
  op: "Identity"
  input: "global/conv2d_3/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam/Assign"
  op: "Assign"
  input: "global/conv2d_3/bias/Adam"
  input: "global/conv2d_3/bias/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam/read"
  op: "Identity"
  input: "global/conv2d_3/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "global/conv2d_3/bias/Adam_1"
  input: "global/conv2d_3/bias/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/conv2d_3/bias/Adam_1/read"
  op: "Identity"
  input: "global/conv2d_3/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam/Assign"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/weights/Adam"
  input: "global/rnn/basic_lstm_cell/weights/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam/read"
  op: "Identity"
  input: "global/rnn/basic_lstm_cell/weights/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam_1/Assign"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/weights/Adam_1/read"
  op: "Identity"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam/Assign"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/biases/Adam"
  input: "global/rnn/basic_lstm_cell/biases/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam/read"
  op: "Identity"
  input: "global/rnn/basic_lstm_cell/biases/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam_1/Assign"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/rnn/basic_lstm_cell/biases/Adam_1/read"
  op: "Identity"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense/kernel/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense/kernel/Adam/Assign"
  op: "Assign"
  input: "global/dense/kernel/Adam"
  input: "global/dense/kernel/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense/kernel/Adam/read"
  op: "Identity"
  input: "global/dense/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "global/dense/kernel/Adam_1"
  input: "global/dense/kernel/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense/kernel/Adam_1/read"
  op: "Identity"
  input: "global/dense/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense/bias/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense/bias/Adam/Assign"
  op: "Assign"
  input: "global/dense/bias/Adam"
  input: "global/dense/bias/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense/bias/Adam/read"
  op: "Identity"
  input: "global/dense/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/dense/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense/bias/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense/bias/Adam_1/Assign"
  op: "Assign"
  input: "global/dense/bias/Adam_1"
  input: "global/dense/bias/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense/bias/Adam_1/read"
  op: "Identity"
  input: "global/dense/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam/Assign"
  op: "Assign"
  input: "global/dense_1/kernel/Adam"
  input: "global/dense_1/kernel/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam/read"
  op: "Identity"
  input: "global/dense_1/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "global/dense_1/kernel/Adam_1"
  input: "global/dense_1/kernel/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense_1/kernel/Adam_1/read"
  op: "Identity"
  input: "global/dense_1/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/dense_1/bias/Adam/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense_1/bias/Adam"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense_1/bias/Adam/Assign"
  op: "Assign"
  input: "global/dense_1/bias/Adam"
  input: "global/dense_1/bias/Adam/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense_1/bias/Adam/read"
  op: "Identity"
  input: "global/dense_1/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "global/dense_1/bias/Adam_1/Initializer/Const"
  op: "Const"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "global/dense_1/bias/Adam_1"
  op: "VariableV2"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global/dense_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "global/dense_1/bias/Adam_1"
  input: "global/dense_1/bias/Adam_1/Initializer/Const"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global/dense_1/bias/Adam_1/read"
  op: "Identity"
  input: "global/dense_1/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam_1/learning_rate"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam_1/beta1"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam_1/beta2"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam_1/epsilon"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d/kernel"
  input: "global/conv2d/kernel/Adam"
  input: "global/conv2d/kernel/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d/bias"
  input: "global/conv2d/bias/Adam"
  input: "global/conv2d/bias/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d_1/kernel"
  input: "global/conv2d_1/kernel/Adam"
  input: "global/conv2d_1/kernel/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d_1/bias"
  input: "global/conv2d_1/bias/Adam"
  input: "global/conv2d_1/bias/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d_2/kernel"
  input: "global/conv2d_2/kernel/Adam"
  input: "global/conv2d_2/kernel/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d_2/bias"
  input: "global/conv2d_2/bias/Adam"
  input: "global/conv2d_2/bias/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d_3/kernel"
  input: "global/conv2d_3/kernel/Adam"
  input: "global/conv2d_3/kernel/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_6"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/conv2d_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/conv2d_3/bias"
  input: "global/conv2d_3/bias/Adam"
  input: "global/conv2d_3/bias/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_7"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/rnn/basic_lstm_cell/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "global/rnn/basic_lstm_cell/weights"
  input: "global/rnn/basic_lstm_cell/weights/Adam"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_8"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/rnn/basic_lstm_cell/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "global/rnn/basic_lstm_cell/biases"
  input: "global/rnn/basic_lstm_cell/biases/Adam"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_9"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "global/dense/kernel"
  input: "global/dense/kernel/Adam"
  input: "global/dense/kernel/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_10"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/dense/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/dense/bias"
  input: "global/dense/bias/Adam"
  input: "global/dense/bias/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_11"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/dense_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "global/dense_1/kernel"
  input: "global/dense_1/kernel/Adam"
  input: "global/dense_1/kernel/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_12"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/update_global/dense_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "global/dense_1/bias"
  input: "global/dense_1/bias/Adam"
  input: "global/dense_1/bias/Adam_1"
  input: "beta1_power_1/read"
  input: "beta2_power_1/read"
  input: "Adam_1/learning_rate"
  input: "Adam_1/beta1"
  input: "Adam_1/beta2"
  input: "Adam_1/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_13"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam_1/mul"
  op: "Mul"
  input: "beta1_power_1/read"
  input: "Adam_1/beta1"
  input: "^Adam_1/update_global/conv2d/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_1/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_1/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_2/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_2/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_3/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_3/bias/ApplyAdam"
  input: "^Adam_1/update_global/rnn/basic_lstm_cell/weights/ApplyAdam"
  input: "^Adam_1/update_global/rnn/basic_lstm_cell/biases/ApplyAdam"
  input: "^Adam_1/update_global/dense/kernel/ApplyAdam"
  input: "^Adam_1/update_global/dense/bias/ApplyAdam"
  input: "^Adam_1/update_global/dense_1/kernel/ApplyAdam"
  input: "^Adam_1/update_global/dense_1/bias/ApplyAdam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam_1/Assign"
  op: "Assign"
  input: "beta1_power_1"
  input: "Adam_1/mul"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1/mul_1"
  op: "Mul"
  input: "beta2_power_1/read"
  input: "Adam_1/beta2"
  input: "^Adam_1/update_global/conv2d/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_1/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_1/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_2/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_2/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_3/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_3/bias/ApplyAdam"
  input: "^Adam_1/update_global/rnn/basic_lstm_cell/weights/ApplyAdam"
  input: "^Adam_1/update_global/rnn/basic_lstm_cell/biases/ApplyAdam"
  input: "^Adam_1/update_global/dense/kernel/ApplyAdam"
  input: "^Adam_1/update_global/dense/bias/ApplyAdam"
  input: "^Adam_1/update_global/dense_1/kernel/ApplyAdam"
  input: "^Adam_1/update_global/dense_1/bias/ApplyAdam"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam_1/Assign_1"
  op: "Assign"
  input: "beta2_power_1"
  input: "Adam_1/mul_1"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam_1"
  op: "NoOp"
  input: "^Adam_1/update_global/conv2d/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_1/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_1/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_2/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_2/bias/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_3/kernel/ApplyAdam"
  input: "^Adam_1/update_global/conv2d_3/bias/ApplyAdam"
  input: "^Adam_1/update_global/rnn/basic_lstm_cell/weights/ApplyAdam"
  input: "^Adam_1/update_global/rnn/basic_lstm_cell/biases/ApplyAdam"
  input: "^Adam_1/update_global/dense/kernel/ApplyAdam"
  input: "^Adam_1/update_global/dense/bias/ApplyAdam"
  input: "^Adam_1/update_global/dense_1/kernel/ApplyAdam"
  input: "^Adam_1/update_global/dense_1/bias/ApplyAdam"
  input: "^Adam_1/Assign"
  input: "^Adam_1/Assign_1"
  device: "/job:ps/task:0/device:CPU:0"
}
node {
  name: "group_deps_1/NoOp"
  op: "NoOp"
  input: "^AssignAdd"
  device: "/job:ps/task:0/device:CPU:0"
}
node {
  name: "group_deps_1/NoOp_1"
  op: "NoOp"
  input: "^Adam_1"
  device: "/job:ps/task:0/device:CPU:0"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^group_deps_1/NoOp"
  input: "^group_deps_1/NoOp_1"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "init_1/NoOp"
  op: "NoOp"
  input: "^global/conv2d/kernel/Assign"
  input: "^global/conv2d/bias/Assign"
  input: "^global/conv2d_1/kernel/Assign"
  input: "^global/conv2d_1/bias/Assign"
  input: "^global/conv2d_2/kernel/Assign"
  input: "^global/conv2d_2/bias/Assign"
  input: "^global/conv2d_3/kernel/Assign"
  input: "^global/conv2d_3/bias/Assign"
  input: "^global/rnn/basic_lstm_cell/weights/Assign"
  input: "^global/rnn/basic_lstm_cell/biases/Assign"
  input: "^global/dense/kernel/Assign"
  input: "^global/dense/bias/Assign"
  input: "^global/dense_1/kernel/Assign"
  input: "^global/dense_1/bias/Assign"
  input: "^global/global_step/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power_1/Assign"
  input: "^global/conv2d/kernel/Adam/Assign"
  input: "^global/conv2d/kernel/Adam_1/Assign"
  input: "^global/conv2d/bias/Adam/Assign"
  input: "^global/conv2d/bias/Adam_1/Assign"
  input: "^global/conv2d_1/kernel/Adam/Assign"
  input: "^global/conv2d_1/kernel/Adam_1/Assign"
  input: "^global/conv2d_1/bias/Adam/Assign"
  input: "^global/conv2d_1/bias/Adam_1/Assign"
  input: "^global/conv2d_2/kernel/Adam/Assign"
  input: "^global/conv2d_2/kernel/Adam_1/Assign"
  input: "^global/conv2d_2/bias/Adam/Assign"
  input: "^global/conv2d_2/bias/Adam_1/Assign"
  input: "^global/conv2d_3/kernel/Adam/Assign"
  input: "^global/conv2d_3/kernel/Adam_1/Assign"
  input: "^global/conv2d_3/bias/Adam/Assign"
  input: "^global/conv2d_3/bias/Adam_1/Assign"
  input: "^global/rnn/basic_lstm_cell/weights/Adam/Assign"
  input: "^global/rnn/basic_lstm_cell/weights/Adam_1/Assign"
  input: "^global/rnn/basic_lstm_cell/biases/Adam/Assign"
  input: "^global/rnn/basic_lstm_cell/biases/Adam_1/Assign"
  input: "^global/dense/kernel/Adam/Assign"
  input: "^global/dense/kernel/Adam_1/Assign"
  input: "^global/dense/bias/Adam/Assign"
  input: "^global/dense/bias/Adam_1/Assign"
  input: "^global/dense_1/kernel/Adam/Assign"
  input: "^global/dense_1/kernel/Adam_1/Assign"
  input: "^global/dense_1/bias/Adam/Assign"
  input: "^global/dense_1/bias/Adam_1/Assign"
  device: "/job:ps/task:0"
}
node {
  name: "init_1/NoOp_1"
  op: "NoOp"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/bias/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^conv2d/kernel/Adam/Assign"
  input: "^conv2d/kernel/Adam_1/Assign"
  input: "^conv2d/bias/Adam/Assign"
  input: "^conv2d/bias/Adam_1/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^init_1/NoOp"
  input: "^init_1/NoOp_1"
}
node {
  name: "init_2/NoOp"
  op: "NoOp"
  input: "^global/conv2d/kernel/Assign"
  input: "^global/conv2d/bias/Assign"
  input: "^global/conv2d_1/kernel/Assign"
  input: "^global/conv2d_1/bias/Assign"
  input: "^global/conv2d_2/kernel/Assign"
  input: "^global/conv2d_2/bias/Assign"
  input: "^global/conv2d_3/kernel/Assign"
  input: "^global/conv2d_3/bias/Assign"
  input: "^global/rnn/basic_lstm_cell/weights/Assign"
  input: "^global/rnn/basic_lstm_cell/biases/Assign"
  input: "^global/dense/kernel/Assign"
  input: "^global/dense/bias/Assign"
  input: "^global/dense_1/kernel/Assign"
  input: "^global/dense_1/bias/Assign"
  input: "^global/global_step/Assign"
  input: "^beta1_power_1/Assign"
  input: "^beta2_power_1/Assign"
  input: "^global/conv2d/kernel/Adam/Assign"
  input: "^global/conv2d/kernel/Adam_1/Assign"
  input: "^global/conv2d/bias/Adam/Assign"
  input: "^global/conv2d/bias/Adam_1/Assign"
  input: "^global/conv2d_1/kernel/Adam/Assign"
  input: "^global/conv2d_1/kernel/Adam_1/Assign"
  input: "^global/conv2d_1/bias/Adam/Assign"
  input: "^global/conv2d_1/bias/Adam_1/Assign"
  input: "^global/conv2d_2/kernel/Adam/Assign"
  input: "^global/conv2d_2/kernel/Adam_1/Assign"
  input: "^global/conv2d_2/bias/Adam/Assign"
  input: "^global/conv2d_2/bias/Adam_1/Assign"
  input: "^global/conv2d_3/kernel/Adam/Assign"
  input: "^global/conv2d_3/kernel/Adam_1/Assign"
  input: "^global/conv2d_3/bias/Adam/Assign"
  input: "^global/conv2d_3/bias/Adam_1/Assign"
  input: "^global/rnn/basic_lstm_cell/weights/Adam/Assign"
  input: "^global/rnn/basic_lstm_cell/weights/Adam_1/Assign"
  input: "^global/rnn/basic_lstm_cell/biases/Adam/Assign"
  input: "^global/rnn/basic_lstm_cell/biases/Adam_1/Assign"
  input: "^global/dense/kernel/Adam/Assign"
  input: "^global/dense/kernel/Adam_1/Assign"
  input: "^global/dense/bias/Adam/Assign"
  input: "^global/dense/bias/Adam_1/Assign"
  input: "^global/dense_1/kernel/Adam/Assign"
  input: "^global/dense_1/kernel/Adam_1/Assign"
  input: "^global/dense_1/bias/Adam/Assign"
  input: "^global/dense_1/bias/Adam_1/Assign"
  device: "/job:ps/task:0"
}
node {
  name: "init_2/NoOp_1"
  op: "NoOp"
  input: "^local/conv2d/kernel/Assign"
  input: "^local/conv2d/bias/Assign"
  input: "^local/conv2d_1/kernel/Assign"
  input: "^local/conv2d_1/bias/Assign"
  input: "^local/conv2d_2/kernel/Assign"
  input: "^local/conv2d_2/bias/Assign"
  input: "^local/conv2d_3/kernel/Assign"
  input: "^local/conv2d_3/bias/Assign"
  input: "^local/rnn/basic_lstm_cell/weights/Assign"
  input: "^local/rnn/basic_lstm_cell/biases/Assign"
  input: "^local/dense/kernel/Assign"
  input: "^local/dense/bias/Assign"
  input: "^local/dense_1/kernel/Assign"
  input: "^local/dense_1/bias/Assign"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/bias/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^conv2d/kernel/Adam/Assign"
  input: "^conv2d/kernel/Adam_1/Assign"
  input: "^conv2d/bias/Adam/Assign"
  input: "^conv2d/bias/Adam_1/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
  input: "^dense/bias/Adam/Assign"
  input: "^dense/bias/Adam_1/Assign"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^init_2/NoOp"
  input: "^init_2/NoOp_1"
}
node {
  name: "save/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 59
          }
        }
        string_val: "beta1_power"
        string_val: "beta1_power_1"
        string_val: "beta2_power"
        string_val: "beta2_power_1"
        string_val: "conv2d/bias"
        string_val: "conv2d/bias/Adam"
        string_val: "conv2d/bias/Adam_1"
        string_val: "conv2d/kernel"
        string_val: "conv2d/kernel/Adam"
        string_val: "conv2d/kernel/Adam_1"
        string_val: "dense/bias"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "global/conv2d/bias"
        string_val: "global/conv2d/bias/Adam"
        string_val: "global/conv2d/bias/Adam_1"
        string_val: "global/conv2d/kernel"
        string_val: "global/conv2d/kernel/Adam"
        string_val: "global/conv2d/kernel/Adam_1"
        string_val: "global/conv2d_1/bias"
        string_val: "global/conv2d_1/bias/Adam"
        string_val: "global/conv2d_1/bias/Adam_1"
        string_val: "global/conv2d_1/kernel"
        string_val: "global/conv2d_1/kernel/Adam"
        string_val: "global/conv2d_1/kernel/Adam_1"
        string_val: "global/conv2d_2/bias"
        string_val: "global/conv2d_2/bias/Adam"
        string_val: "global/conv2d_2/bias/Adam_1"
        string_val: "global/conv2d_2/kernel"
        string_val: "global/conv2d_2/kernel/Adam"
        string_val: "global/conv2d_2/kernel/Adam_1"
        string_val: "global/conv2d_3/bias"
        string_val: "global/conv2d_3/bias/Adam"
        string_val: "global/conv2d_3/bias/Adam_1"
        string_val: "global/conv2d_3/kernel"
        string_val: "global/conv2d_3/kernel/Adam"
        string_val: "global/conv2d_3/kernel/Adam_1"
        string_val: "global/dense/bias"
        string_val: "global/dense/bias/Adam"
        string_val: "global/dense/bias/Adam_1"
        string_val: "global/dense/kernel"
        string_val: "global/dense/kernel/Adam"
        string_val: "global/dense/kernel/Adam_1"
        string_val: "global/dense_1/bias"
        string_val: "global/dense_1/bias/Adam"
        string_val: "global/dense_1/bias/Adam_1"
        string_val: "global/dense_1/kernel"
        string_val: "global/dense_1/kernel/Adam"
        string_val: "global/dense_1/kernel/Adam_1"
        string_val: "global/global_step"
        string_val: "global/rnn/basic_lstm_cell/biases"
        string_val: "global/rnn/basic_lstm_cell/biases/Adam"
        string_val: "global/rnn/basic_lstm_cell/biases/Adam_1"
        string_val: "global/rnn/basic_lstm_cell/weights"
        string_val: "global/rnn/basic_lstm_cell/weights/Adam"
        string_val: "global/rnn/basic_lstm_cell/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 59
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/Const_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "beta1_power"
  input: "beta1_power_1"
  input: "beta2_power"
  input: "beta2_power_1"
  input: "conv2d/bias"
  input: "conv2d/bias/Adam"
  input: "conv2d/bias/Adam_1"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Adam"
  input: "conv2d/kernel/Adam_1"
  input: "dense/bias"
  input: "dense/bias/Adam"
  input: "dense/bias/Adam_1"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "global/conv2d/bias"
  input: "global/conv2d/bias/Adam"
  input: "global/conv2d/bias/Adam_1"
  input: "global/conv2d/kernel"
  input: "global/conv2d/kernel/Adam"
  input: "global/conv2d/kernel/Adam_1"
  input: "global/conv2d_1/bias"
  input: "global/conv2d_1/bias/Adam"
  input: "global/conv2d_1/bias/Adam_1"
  input: "global/conv2d_1/kernel"
  input: "global/conv2d_1/kernel/Adam"
  input: "global/conv2d_1/kernel/Adam_1"
  input: "global/conv2d_2/bias"
  input: "global/conv2d_2/bias/Adam"
  input: "global/conv2d_2/bias/Adam_1"
  input: "global/conv2d_2/kernel"
  input: "global/conv2d_2/kernel/Adam"
  input: "global/conv2d_2/kernel/Adam_1"
  input: "global/conv2d_3/bias"
  input: "global/conv2d_3/bias/Adam"
  input: "global/conv2d_3/bias/Adam_1"
  input: "global/conv2d_3/kernel"
  input: "global/conv2d_3/kernel/Adam"
  input: "global/conv2d_3/kernel/Adam_1"
  input: "global/dense/bias"
  input: "global/dense/bias/Adam"
  input: "global/dense/bias/Adam_1"
  input: "global/dense/kernel"
  input: "global/dense/kernel/Adam"
  input: "global/dense/kernel/Adam_1"
  input: "global/dense_1/bias"
  input: "global/dense_1/bias/Adam"
  input: "global/dense_1/bias/Adam_1"
  input: "global/dense_1/kernel"
  input: "global/dense_1/kernel/Adam"
  input: "global/dense_1/kernel/Adam_1"
  input: "global/global_step"
  input: "global/rnn/basic_lstm_cell/biases"
  input: "global/rnn/basic_lstm_cell/biases/Adam"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1"
  input: "global/rnn/basic_lstm_cell/weights"
  input: "global/rnn/basic_lstm_cell/weights/Adam"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/Const_1"
  input: "^save/SaveV2_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2_14"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "beta1_power_1"
  input: "save/RestoreV2_15"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_16"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "beta2_power_1"
  input: "save/RestoreV2_17"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv2d/bias"
  input: "save/RestoreV2_18"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv2d/bias/Adam"
  input: "save/RestoreV2_19"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv2d/bias/Adam_1"
  input: "save/RestoreV2_20"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv2d/kernel"
  input: "save/RestoreV2_21"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv2d/kernel/Adam"
  input: "save/RestoreV2_22"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv2d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv2d/kernel/Adam_1"
  input: "save/RestoreV2_23"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2_24"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "dense/bias/Adam"
  input: "save/RestoreV2_25"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "dense/bias/Adam_1"
  input: "save/RestoreV2_26"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2_27"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "save/RestoreV2_28"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "save/RestoreV2_29"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "global/conv2d/bias"
  input: "save/RestoreV2_30"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "global/conv2d/bias/Adam"
  input: "save/RestoreV2_31"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "global/conv2d/bias/Adam_1"
  input: "save/RestoreV2_32"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "global/conv2d/kernel"
  input: "save/RestoreV2_33"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "global/conv2d/kernel/Adam"
  input: "save/RestoreV2_34"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "global/conv2d/kernel/Adam_1"
  input: "save/RestoreV2_35"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "global/conv2d_1/bias"
  input: "save/RestoreV2_36"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "global/conv2d_1/bias/Adam"
  input: "save/RestoreV2_37"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "global/conv2d_1/bias/Adam_1"
  input: "save/RestoreV2_38"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "global/conv2d_1/kernel"
  input: "save/RestoreV2_39"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "global/conv2d_1/kernel/Adam"
  input: "save/RestoreV2_40"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "global/conv2d_1/kernel/Adam_1"
  input: "save/RestoreV2_41"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "global/conv2d_2/bias"
  input: "save/RestoreV2_42"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "global/conv2d_2/bias/Adam"
  input: "save/RestoreV2_43"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "global/conv2d_2/bias/Adam_1"
  input: "save/RestoreV2_44"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "global/conv2d_2/kernel"
  input: "save/RestoreV2_45"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "global/conv2d_2/kernel/Adam"
  input: "save/RestoreV2_46"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "global/conv2d_2/kernel/Adam_1"
  input: "save/RestoreV2_47"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_3/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "global/conv2d_3/bias"
  input: "save/RestoreV2_48"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_3/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "global/conv2d_3/bias/Adam"
  input: "save/RestoreV2_49"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_3/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "global/conv2d_3/bias/Adam_1"
  input: "save/RestoreV2_50"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "global/conv2d_3/kernel"
  input: "save/RestoreV2_51"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_3/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "global/conv2d_3/kernel/Adam"
  input: "save/RestoreV2_52"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/conv2d_3/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "global/conv2d_3/kernel/Adam_1"
  input: "save/RestoreV2_53"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "global/dense/bias"
  input: "save/RestoreV2_54"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "global/dense/bias/Adam"
  input: "save/RestoreV2_55"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "global/dense/bias/Adam_1"
  input: "save/RestoreV2_56"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "global/dense/kernel"
  input: "save/RestoreV2_57"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "global/dense/kernel/Adam"
  input: "save/RestoreV2_58"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "global/dense/kernel/Adam_1"
  input: "save/RestoreV2_59"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense_1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "global/dense_1/bias"
  input: "save/RestoreV2_60"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "global/dense_1/bias/Adam"
  input: "save/RestoreV2_61"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "global/dense_1/bias/Adam_1"
  input: "save/RestoreV2_62"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense_1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "global/dense_1/kernel"
  input: "save/RestoreV2_63"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense_1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "global/dense_1/kernel/Adam"
  input: "save/RestoreV2_64"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/dense_1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "global/dense_1/kernel/Adam_1"
  input: "save/RestoreV2_65"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "global/global_step"
  input: "save/RestoreV2_66"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/rnn/basic_lstm_cell/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/biases"
  input: "save/RestoreV2_67"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/rnn/basic_lstm_cell/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/biases/Adam"
  input: "save/RestoreV2_68"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/rnn/basic_lstm_cell/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1"
  input: "save/RestoreV2_69"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/rnn/basic_lstm_cell/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/weights"
  input: "save/RestoreV2_70"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/rnn/basic_lstm_cell/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/weights/Adam"
  input: "save/RestoreV2_71"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global/rnn/basic_lstm_cell/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const_1"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  device: "/job:ps/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1"
  input: "save/RestoreV2_72"
  device: "/job:ps/task:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 320
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all_1/NoOp"
  op: "NoOp"
  input: "^save/Assign_15"
  input: "^save/Assign_17"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  device: "/job:ps/task:0"
}
node {
  name: "save/restore_all_1/NoOp_1"
  op: "NoOp"
  input: "^save/Assign_14"
  input: "^save/Assign_16"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  device: "/job:worker/task:0/device:CPU:0"
}
node {
  name: "save/restore_all_1"
  op: "NoOp"
  input: "^save/restore_all_1/NoOp"
  input: "^save/restore_all_1/NoOp_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global/conv2d/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "global/conv2d/bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "global/conv2d_1/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "global/conv2d_1/bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "global/conv2d_2/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "global/conv2d_2/bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "global/conv2d_3/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "global/conv2d_3/bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "global/rnn/basic_lstm_cell/weights"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "global/rnn/basic_lstm_cell/biases"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "global/dense/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "global/dense/bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "global/dense_1/kernel"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "global/dense_1/bias"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "global/global_step"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv2d/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv2d/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "dense/bias"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "beta1_power"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "beta2_power"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv2d/kernel/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2d/kernel/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv2d/bias/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv2d/bias/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "dense/bias/Adam_1"
  device: "/job:worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "beta1_power_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "beta2_power_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "global/conv2d/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "global/conv2d/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "global/conv2d/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "global/conv2d/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "global/conv2d_1/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "global/conv2d_1/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "global/conv2d_1/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "global/conv2d_1/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "global/conv2d_2/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "global/conv2d_2/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "global/conv2d_2/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "global/conv2d_2/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "global/conv2d_3/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "global/conv2d_3/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "global/conv2d_3/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "global/conv2d_3/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/conv2d_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "global/rnn/basic_lstm_cell/weights/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "global/rnn/basic_lstm_cell/weights/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "global/rnn/basic_lstm_cell/biases/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "global/rnn/basic_lstm_cell/biases/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/rnn/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "global/dense/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "global/dense/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "global/dense/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "global/dense/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "global/dense_1/kernel/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "global/dense_1/kernel/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "global/dense_1/bias/Adam"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "global/dense_1/bias/Adam_1"
  device: "/job:ps/task:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global/dense_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  attr {
    key: "N"
    value {
      i: 59
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 59
          }
        }
        string_val: "global/conv2d/kernel"
        string_val: "global/conv2d/bias"
        string_val: "global/conv2d_1/kernel"
        string_val: "global/conv2d_1/bias"
        string_val: "global/conv2d_2/kernel"
        string_val: "global/conv2d_2/bias"
        string_val: "global/conv2d_3/kernel"
        string_val: "global/conv2d_3/bias"
        string_val: "global/rnn/basic_lstm_cell/weights"
        string_val: "global/rnn/basic_lstm_cell/biases"
        string_val: "global/dense/kernel"
        string_val: "global/dense/bias"
        string_val: "global/dense_1/kernel"
        string_val: "global/dense_1/bias"
        string_val: "global/global_step"
        string_val: "conv2d/kernel"
        string_val: "conv2d/bias"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv2d/kernel/Adam"
        string_val: "conv2d/kernel/Adam_1"
        string_val: "conv2d/bias/Adam"
        string_val: "conv2d/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "dense/bias/Adam"
        string_val: "dense/bias/Adam_1"
        string_val: "beta1_power_1"
        string_val: "beta2_power_1"
        string_val: "global/conv2d/kernel/Adam"
        string_val: "global/conv2d/kernel/Adam_1"
        string_val: "global/conv2d/bias/Adam"
        string_val: "global/conv2d/bias/Adam_1"
        string_val: "global/conv2d_1/kernel/Adam"
        string_val: "global/conv2d_1/kernel/Adam_1"
        string_val: "global/conv2d_1/bias/Adam"
        string_val: "global/conv2d_1/bias/Adam_1"
        string_val: "global/conv2d_2/kernel/Adam"
        string_val: "global/conv2d_2/kernel/Adam_1"
        string_val: "global/conv2d_2/bias/Adam"
        string_val: "global/conv2d_2/bias/Adam_1"
        string_val: "global/conv2d_3/kernel/Adam"
        string_val: "global/conv2d_3/kernel/Adam_1"
        string_val: "global/conv2d_3/bias/Adam"
        string_val: "global/conv2d_3/bias/Adam_1"
        string_val: "global/rnn/basic_lstm_cell/weights/Adam"
        string_val: "global/rnn/basic_lstm_cell/weights/Adam_1"
        string_val: "global/rnn/basic_lstm_cell/biases/Adam"
        string_val: "global/rnn/basic_lstm_cell/biases/Adam_1"
        string_val: "global/dense/kernel/Adam"
        string_val: "global/dense/kernel/Adam_1"
        string_val: "global/dense/bias/Adam"
        string_val: "global/dense/bias/Adam_1"
        string_val: "global/dense_1/kernel/Adam"
        string_val: "global/dense_1/kernel/Adam_1"
        string_val: "global/dense_1/bias/Adam"
        string_val: "global/dense_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 59
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 59
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 59
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_3"
  input: "^init_all_tables"
}
versions {
  producer: 21
}
